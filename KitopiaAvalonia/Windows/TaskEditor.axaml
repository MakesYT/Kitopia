<windowing:AppWindow xmlns="https://github.com/avaloniaui"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:controls="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
                     xmlns:windowing="clr-namespace:FluentAvalonia.UI.Windowing;assembly=FluentAvalonia"
                     xmlns:converter="clr-namespace:Kitopia.Converter"
                     xmlns:pluginCore="clr-namespace:PluginCore;assembly=PluginCore"
                     xmlns:controls1="clr-namespace:KitopiaAvalonia.Controls"
                     xmlns:taskEditor="clr-namespace:Kitopia.Converter.TaskEditor"
                     xmlns:customScenario="clr-namespace:Core.SDKs.CustomScenario;assembly=Core"

                     xmlns:taskEditor1="clr-namespace:Core.ViewModel.TaskEditor;assembly=Core"

                     xmlns:objectModel="clr-namespace:System.Collections.ObjectModel;assembly=System.ObjectModel"
                     xmlns:generic="clr-namespace:System.Collections.Generic;assembly=System.Runtime"
                     xmlns:controls2="clr-namespace:NodifyM.Avalonia.Controls;assembly=NodifyM.Avalonia"
                     xmlns:pages="clr-namespace:KitopiaAvalonia.Pages"
                     mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                     x:Class="KitopiaAvalonia.Windows.TaskEditor"
                     Title="情景编排"
                     WindowStartupLocation="CenterScreen"
                     TransparencyLevelHint="AcrylicBlur"
                     Name="TaskEditorWindow"
                     x:DataType="taskEditor1:TaskEditorViewModel" Height="450" Width="1800">
    <windowing:AppWindow.Background>
        <SolidColorBrush Color="{DynamicResource SolidBackgroundFillColorBase}" Opacity="0.65" />

    </windowing:AppWindow.Background>
    <windowing:AppWindow.Resources>

        <converter:HotKeySignNameToolCTr x:Key="HotKeySignNameToolCTr" />
        <taskEditor:IfNullVisibilityHidden x:Key="IfNullVisibilityHidden" />


        <converter:ReverseBool x:Key="ReverseBool" />
    </windowing:AppWindow.Resources>
    <Interaction.Behaviors>
        <EventTriggerBehavior EventName="Closing">
            <InvokeCommandAction Command="{Binding ReloadScenarioCommand}" PassEventArgsToCommand="True" />
        </EventTriggerBehavior>
        <EventTriggerBehavior EventName="DataContextChanged">
            <InvokeCommandAction Command="{Binding LoadCommand}"
                                 CommandParameter="{Binding #TaskEditorWindow}" />
        </EventTriggerBehavior>
        <EventTriggerBehavior EventName="Loaded">
            <InvokeCommandAction Command="{Binding LoadCommand}"
                                 CommandParameter="{Binding #TaskEditorWindow}" />
        </EventTriggerBehavior>
    </Interaction.Behaviors>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="11*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <Button Grid.Row="0" Grid.Column="0" IsVisible="False" x:Name="add" Content="添加"
                Command="{Binding AddNodesCommand}" />
        <!-- 左边部分 -->
        <Border x:Name="border" Grid.Column="0" Padding="0,0,0,0" Margin="0">
            <ScrollViewer Margin="0" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ListBox x:Name="ListBox" Margin="3,0,0,0">

                    <ListBox.ItemContainerTheme>
                        <ControlTheme TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <ControlTemplate>
                                    <ContentPresenter Name="PART_ContentPresenter"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      CornerRadius="{TemplateBinding CornerRadius}" />
                                </ControlTemplate>

                            </Setter>
                        </ControlTheme>
                    </ListBox.ItemContainerTheme>
                    <Expander Header="情景信息" IsExpanded="True">
                        <Expander.Content>
                            <StackPanel>
                                <controls:SettingsExpander Header="情景名称">
                                    <controls:SettingsExpander.Footer>
                                        <TextBox Text="{Binding Scenario.Name}" />
                                    </controls:SettingsExpander.Footer>
                                    <controls:SettingsExpander.IconSource>
                                        <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                 Glyph="&#xf669;" />
                                    </controls:SettingsExpander.IconSource>
                                </controls:SettingsExpander>
                                <controls:SettingsExpander Margin="0" Header="情景描述">
                                    <controls:SettingsExpander.Footer>
                                        <TextBox TextWrapping="Wrap"
                                                 Text="{Binding Scenario.Description}" />
                                    </controls:SettingsExpander.Footer>
                                    <controls:SettingsExpander.IconSource>
                                        <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                 Glyph="&#xf4a3;" />
                                    </controls:SettingsExpander.IconSource>
                                </controls:SettingsExpander>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>

                    <controls:SettingsExpander Margin="0" Header="含有入参"
                                               BorderThickness="0">

                        <controls:SettingsExpander.Footer>
                            <ToggleSwitch
                                IsChecked="{Binding Scenario.IsHaveInputValue,Mode=TwoWay}" />
                        </controls:SettingsExpander.Footer>


                        <controls:SettingsExpander.IconSource>
                            <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                     Glyph="&#xf226;" />
                        </controls:SettingsExpander.IconSource>
                        <StackPanel>
                            <ListBox Margin="0,0,10,0" x:Name="inputvalues"
                                     ItemsSource="{Binding Scenario.InputValue }">
                                <ListBox.ItemContainerTheme>
                                    <ControlTheme TargetType="ListBoxItem">
                                        <Setter Property="Template">
                                            <ControlTemplate>
                                                <ContentPresenter Name="PART_ContentPresenter"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Background="{TemplateBinding Background}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  DataContext="{TemplateBinding DataContext}"
                                                                  CornerRadius="{TemplateBinding CornerRadius}" />
                                            </ControlTemplate>

                                        </Setter>
                                    </ControlTheme>
                                </ListBox.ItemContainerTheme>
                                <ListBox.ItemTemplate>

                                    <DataTemplate>
                                        <Button Width="{Binding $parent.Bounds.Width, Mode=OneWay}"
                                                HorizontalContentAlignment="Stretch">
                                            <DockPanel Margin="15,0,0,0">
                                                <TextBlock VerticalAlignment="Center" Text="{ReflectionBinding Key}" />
                                                <Button Name="Button" Width="24" Height="24"
                                                        ToolTip.Tip="删除"
                                                        HorizontalAlignment="Right"
                                                        Command="{Binding $parent[StackPanel].((taskEditor1:TaskEditorViewModel)DataContext).DelInputValueCommand}"
                                                        CommandParameter="{ReflectionBinding Key}"
                                                        VerticalContentAlignment="Center"
                                                        HorizontalContentAlignment="Center">
                                                    <controls:FontIcon VerticalAlignment="Center"
                                                                       HorizontalAlignment="Center"
                                                                       Margin="0,2,0,0"
                                                                       Width="24"
                                                                       Height="24"
                                                                       FontFamily="{StaticResource FluentFont}"
                                                                       Glyph="&#xf36a;"
                                                                       FontSize="24" />
                                                    <Button.Styles>

                                                        <Style
                                                            Selector="Button#Button:pointerover /template/ controls|FABorder#Root">

                                                            <Setter Property="Background">
                                                                <SolidColorBrush
                                                                    Color="{DynamicResource TextFillColorSecondary}"
                                                                    Opacity="0.2" />
                                                            </Setter>
                                                        </Style>

                                                    </Button.Styles>
                                                </Button>
                                            </DockPanel>
                                        </Button>

                                    </DataTemplate>


                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Grid Margin="0,10,10,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>
                                <Button Command="{Binding AddInputValueCommand}"
                                        CommandParameter="{Binding InputValueValue}"
                                        Grid.Column="1" Height="40" Width="40">
                                    <controls:FontIcon FontFamily="{StaticResource FluentFont}"
                                                       Glyph="&#xf107;" />
                                </Button>
                                <DockPanel Grid.Column="0" Margin="0,0,0,0" Height="40">
                                    <TextBox Watermark="变量名称"
                                             Text="{Binding InputValueValue}" />
                                </DockPanel>
                            </Grid>
                        </StackPanel>


                    </controls:SettingsExpander>


                    <Expander Header="Tick控制" IsExpanded="True">
                        <Expander.Content>
                            <StackPanel>
                                <controls:SettingsExpander Margin="0" Header="执行间隔(秒)">
                                    <controls:SettingsExpander.Footer>
                                        <controls:NumberBox
                                            SpinButtonPlacementMode="Inline"
                                            Minimum="0.1"
                                            ValidationMode="InvalidInputOverwritten"
                                            Text="{Binding Scenario.TickIntervalSecond}"
                                            Value="{Binding Scenario.TickIntervalSecond}" />

                                    </controls:SettingsExpander.Footer>

                                    <controls:SettingsExpander.IconSource>
                                        <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                 Glyph="&#xed88;" />
                                    </controls:SettingsExpander.IconSource>
                                </controls:SettingsExpander>
                            </StackPanel>


                        </Expander.Content>
                    </Expander>

                    <Expander Header="变量" FontSize="15" IsExpanded="True" FontWeight="Medium">
                        <Expander.Content>
                            <StackPanel>
                                <ListBox Margin="0,0,10,0" x:Name="values"
                                         ItemsSource="{Binding Scenario.Values }">
                                    <ListBox.ItemContainerTheme>
                                        <ControlTheme TargetType="ListBoxItem">
                                            <Setter Property="Template">
                                                <ControlTemplate>
                                                    <ContentPresenter Name="PART_ContentPresenter"
                                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      Background="{TemplateBinding Background}"
                                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                                      Content="{TemplateBinding Content}"
                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      DataContext="{TemplateBinding DataContext}"
                                                                      CornerRadius="{TemplateBinding CornerRadius}" />
                                                </ControlTemplate>

                                            </Setter>
                                        </ControlTheme>
                                    </ListBox.ItemContainerTheme>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Border BorderBrush="LightGray" BorderThickness="1"
                                                        CornerRadius="3"
                                                        Background="{DynamicResource ControlFillColorDefaultBrush}">
                                                    <Border.ContextFlyout>
                                                        <MenuFlyout>
                                                            <!-- ReSharper disable once Xaml.RedundantResource -->
                                                            <MenuItem Header="删除此变量"
                                                                      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                                      Command="{Binding $parent[StackPanel].((taskEditor1:TaskEditorViewModel)DataContext).DelValueCommand}"
                                                                      CommandParameter="{Binding Key }" />
                                                        </MenuFlyout>
                                                    </Border.ContextFlyout>

                                                    <Grid Margin="9">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="30" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Border Tag="Set" PointerMoved="ListBox_OnMouseMove"
                                                                BorderBrush="LightGray" BorderThickness="1"
                                                                CornerRadius="3">
                                                            <DockPanel Panel.ZIndex="1">
                                                                <Border DockPanel.Dock="Top" CornerRadius="3 3 0 0">

                                                                    <Border Height="20"

                                                                            CornerRadius="3 3 0 0">
                                                                        <Border.Background>
                                                                            <SolidColorBrush Opacity="0.5"
                                                                                Color="{DynamicResource SystemAccentColor}" />
                                                                        </Border.Background>
                                                                        <TextBlock HorizontalAlignment="Center"

                                                                            Text="{ReflectionBinding Key}"
                                                                            Foreground="White" />
                                                                    </Border>

                                                                </Border>
                                                                <Border CornerRadius="0 0 3 3">
                                                                    <Grid>
                                                                        <Rectangle>
                                                                            <Rectangle.Fill>
                                                                                <SolidColorBrush
                                                                                    Color="{DynamicResource Node.BackgroundColor}"
                                                                                    Opacity="0.5" />
                                                                            </Rectangle.Fill>
                                                                        </Rectangle>
                                                                        <DockPanel>
                                                                            <StackPanel Orientation="Vertical"
                                                                                DockPanel.Dock="Left"
                                                                                VerticalAlignment="Center">

                                                                                <StackPanel Orientation="Horizontal"
                                                                                    VerticalAlignment="Center">
                                                                                    <Border Background="Transparent">
                                                                                        <!-- Set the border color to red -->
                                                                                        <Border.BorderBrush>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource SystemAccentColor}"
                                                                                                Opacity="0.5" />
                                                                                        </Border.BorderBrush>
                                                                                        <!-- Set the border thickness to 2 -->
                                                                                        <Border.BorderThickness>2</Border.BorderThickness>
                                                                                        <!-- Set the border corner radius to 10 -->
                                                                                        <Border.CornerRadius>10</Border.CornerRadius>
                                                                                        <!-- Set the padding to 10 -->
                                                                                        <Border.Padding>5</Border.Padding>
                                                                                        <!-- Set the margin to 20 -->
                                                                                        <Border.Margin>5</Border.Margin>
                                                                                    </Border>
                                                                                    <!-- Declare a TextBlock element and give it a name -->

                                                                                    <TextBlock
                                                                                        VerticalAlignment="Center"
                                                                                        x:Name="textBlock"
                                                                                        FontSize="12"

                                                                                        Text="节点">
                                                                                        <TextBlock.Background>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                                                Opacity="0.6" />
                                                                                        </TextBlock.Background>
                                                                                        <TextBlock.Foreground>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorInverse}" />
                                                                                        </TextBlock.Foreground>
                                                                                    </TextBlock>


                                                                                    <TextBlock
                                                                                        VerticalAlignment="Center"
                                                                                        Text="流节点">
                                                                                        <TextBlock.Foreground>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorPrimary}" />
                                                                                        </TextBlock.Foreground>
                                                                                    </TextBlock>
                                                                                </StackPanel>
                                                                                <StackPanel Orientation="Horizontal"
                                                                                    VerticalAlignment="Center">
                                                                                    <Border Background="Transparent">
                                                                                        <!-- Set the border color to red -->
                                                                                        <Border.BorderBrush>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource SystemAccentColor}"
                                                                                                Opacity="0.5" />
                                                                                        </Border.BorderBrush>
                                                                                        <!-- Set the border thickness to 2 -->
                                                                                        <Border.BorderThickness>2</Border.BorderThickness>
                                                                                        <!-- Set the border corner radius to 10 -->
                                                                                        <Border.CornerRadius>10</Border.CornerRadius>
                                                                                        <!-- Set the padding to 10 -->
                                                                                        <Border.Padding>5</Border.Padding>
                                                                                        <!-- Set the margin to 20 -->
                                                                                        <Border.Margin>5</Border.Margin>
                                                                                    </Border>
                                                                                    <!-- Declare a TextBlock element and give it a name -->

                                                                                    <TextBlock
                                                                                        VerticalAlignment="Center"

                                                                                        FontSize="12"

                                                                                        Text="变量">
                                                                                        <TextBlock.Background>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                                                Opacity="0.6" />
                                                                                        </TextBlock.Background>
                                                                                        <TextBlock.Foreground>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorInverse}" />
                                                                                        </TextBlock.Foreground>
                                                                                    </TextBlock>


                                                                                    <TextBlock
                                                                                        VerticalAlignment="Center"
                                                                                        Text="设置">
                                                                                        <TextBlock.Foreground>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorPrimary}" />
                                                                                        </TextBlock.Foreground>
                                                                                    </TextBlock>
                                                                                </StackPanel>
                                                                            </StackPanel>


                                                                        </DockPanel>
                                                                    </Grid>
                                                                </Border>


                                                            </DockPanel>
                                                        </Border>
                                                        <Border Tag="Get" PointerMoved="ListBox_OnMouseMove"
                                                                Grid.Column="2"
                                                                BorderBrush="LightGray" BorderThickness="1"
                                                                CornerRadius="3">
                                                            <DockPanel Panel.ZIndex="1">
                                                                <Border DockPanel.Dock="Top" CornerRadius="3 3 0 0">

                                                                    <Border Height="20"

                                                                            CornerRadius="3 3 0 0">
                                                                        <Border.Background>
                                                                            <SolidColorBrush Opacity="0.5"
                                                                                Color="{DynamicResource SystemAccentColor}" />
                                                                        </Border.Background>
                                                                        <TextBlock HorizontalAlignment="Center"

                                                                            Text="{ReflectionBinding Key }"
                                                                            Foreground="White" />
                                                                    </Border>

                                                                </Border>
                                                                <Border CornerRadius="0 0 3 3">
                                                                    <Grid>
                                                                        <Rectangle>
                                                                            <Rectangle.Fill>
                                                                                <SolidColorBrush
                                                                                    Color="{DynamicResource Node.BackgroundColor}"
                                                                                    Opacity="0.5" />
                                                                            </Rectangle.Fill>
                                                                        </Rectangle>
                                                                        <StackPanel Orientation="Horizontal"
                                                                            VerticalAlignment="Center"
                                                                            HorizontalAlignment="Right">

                                                                            <TextBlock
                                                                                VerticalAlignment="Center"

                                                                                Text="读取">
                                                                                <TextBlock.Foreground>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorPrimary}" />
                                                                                </TextBlock.Foreground>
                                                                            </TextBlock>
                                                                            <TextBlock
                                                                                VerticalAlignment="Center"
                                                                                FontSize="12"

                                                                                Text="变量">
                                                                                <TextBlock.Background>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorPrimary}"
                                                                                        Opacity="0.6" />

                                                                                </TextBlock.Background>
                                                                                <TextBlock.Foreground>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorInverse}" />
                                                                                </TextBlock.Foreground>
                                                                            </TextBlock>

                                                                            <Border Background="Transparent">
                                                                                <!-- Set the border color to red -->
                                                                                <Border.BorderBrush>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource SystemAccentColor}"
                                                                                        Opacity="0.5" />
                                                                                </Border.BorderBrush>
                                                                                <!-- Set the border thickness to 2 -->
                                                                                <Border.BorderThickness>2</Border.BorderThickness>
                                                                                <!-- Set the border corner radius to 10 -->
                                                                                <Border.CornerRadius>10</Border.CornerRadius>
                                                                                <!-- Set the padding to 10 -->
                                                                                <Border.Padding>5</Border.Padding>
                                                                                <!-- Set the margin to 20 -->
                                                                                <Border.Margin>5</Border.Margin>
                                                                            </Border>
                                                                            <!-- Declare a TextBlock element and give it a name -->

                                                                        </StackPanel>


                                                                    </Grid>
                                                                </Border>


                                                            </DockPanel>
                                                        </Border>
                                                    </Grid>
                                                </Border>
                                            </Grid>


                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Grid Margin="0,10,10,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="40" />
                                    </Grid.ColumnDefinitions>
                                    <Button Command="{Binding AddValueCommand}"
                                            CommandParameter="{Binding ValueValue}"
                                            Grid.Column="1" Height="40" Width="40">
                                        <controls:FontIcon FontFamily="{StaticResource FluentFont}"
                                                           Glyph="&#xf107;" />
                                    </Button>
                                    <DockPanel Grid.Column="0" Margin="0,0,0,0" Height="40">
                                        <TextBox Watermark="变量名称"
                                                 Text="{Binding ValueValue}" />
                                    </DockPanel>
                                </Grid>
                            </StackPanel>


                        </Expander.Content>
                    </Expander>
                    <Expander Header="触发条件" IsExpanded="True">
                        <Expander.Content>

                            <StackPanel>

                                <controls:SettingsExpander Margin="0" Header="手动触发"
                                                           BorderThickness="0">
                                    <controls:SettingsExpander.Footer>
                                        <ToggleSwitch
                                            IsChecked="{Binding Scenario.ExecutionManual,Mode=TwoWay}" />
                                    </controls:SettingsExpander.Footer>


                                    <controls:SettingsExpander.IconSource>
                                        <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                 Glyph="&#xf226;" />
                                    </controls:SettingsExpander.IconSource>
                                    <StackPanel>
                                        <controls:SettingsExpander Margin="0" Header="关键词"
                                                                   BorderThickness="0">
                                            <controls:SettingsExpander.IconSource>
                                                <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                         Glyph="&#xf4b6;" />
                                            </controls:SettingsExpander.IconSource>
                                            <Grid ColumnSpan="10" RowSpan="5" Margin="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="36" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="70" />
                                                </Grid.RowDefinitions>
                                                <ListBox Margin="0,0,10,0" x:Name="keys"
                                                         SelectedIndex="{Binding IsSelected}"
                                                         ItemsSource="{Binding Scenario.Keys}" />


                                                <Button Command="{Binding DelKeyCommand}"
                                                        CommandParameter="{Binding ElementName=keys,Path=SelectedValue}"
                                                        Grid.Row="0" Grid.Column="1" Height="36" Width="36">
                                                    <controls:FontIcon FontFamily="{StaticResource FluentFont}"
                                                                       Glyph="&#xebce;" />
                                                </Button>
                                                <Button Command="{Binding AddKeyCommand}"
                                                        CommandParameter="{Binding KeyValue}" Grid.Row="1"
                                                        Grid.Column="1" Height="36" Width="36">
                                                    <controls:FontIcon FontFamily="{StaticResource FluentFont}"
                                                                       Glyph="&#xf107;" />
                                                </Button>
                                                <DockPanel Grid.Row="1" Grid.Column="0" Margin="10" Height="40">
                                                    <TextBox
                                                        Text="{Binding KeyValue}" />
                                                </DockPanel>
                                            </Grid>
                                        </controls:SettingsExpander>


                                    </StackPanel>

                                </controls:SettingsExpander>
                                <controls:SettingsExpander Margin="0" Header="自动触发"
                                                           BorderThickness="0">

                                    <controls:SettingsExpander.IconSource>
                                        <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                 Glyph="&#xf217;" />
                                    </controls:SettingsExpander.IconSource>

                                    <ItemsControl Margin="15,0,0,0"
                                                  ItemsSource="{Binding Source={x:Static customScenario:CustomScenarioGloble.Triggers}}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <DataTemplate.DataType>
                                                    <x:Type TypeName="generic:KeyValuePair"
                                                            x:TypeArguments="x:String, pluginCore:CustomScenarioTriggerInfo" />
                                                </DataTemplate.DataType>
                                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                                    <StackPanel.Resources>
                                                        <taskEditor:AutoTriggersCtr x:Key="AutoTriggersCtr" />
                                                    </StackPanel.Resources>
                                                    <CheckBox
                                                        IsChecked="{Binding Path=$parent[Expander].((taskEditor1:TaskEditorViewModel)DataContext).Scenario,Converter={StaticResource AutoTriggersCtr},
                                                              ConverterParameter={Binding .}}" />
                                                    <TextBlock VerticalAlignment="Center"
                                                               Text="{Binding Value.Name}" />

                                                    <controls:FontIcon FontFamily="{StaticResource FluentFont}"
                                                                       Glyph="&#xf4a3;"
                                                                       ToolTip.Tip="{Binding Value.Description}"
                                                                       ToolTip.ShowDelay="0"
                                                                       IsVisible="{Binding Value.Description, Converter={StaticResource IfNullVisibilityHidden}}" />
                                                </StackPanel>
                                            </DataTemplate>

                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                </controls:SettingsExpander>
                                <controls:SettingsExpander Margin="0" Header="快捷键触发"
                                                           BorderThickness="0">
                                    <controls:SettingsExpander.IconSource>
                                        <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                 Glyph="&#xf4b8;" />
                                    </controls:SettingsExpander.IconSource>
                                    <StackPanel Margin="0" Orientation="Vertical">
                                        <controls:SettingsExpander Header="激活快捷键" Description="修改激活快捷键">
                                            <controls:SettingsExpander.Footer>
                                                <Panel>
                                                    <controls1:HotKeyShow x:Name="KeyShow"
                                                                          HotKeyModel="{Binding Scenario.RunHotKey}"
                                                                          IsEnabled="{Binding IsSaveInLocal}">

                                                    </controls1:HotKeyShow>
                                                    <Panel Background="{DynamicResource ControlFillColorDisabledBrush}"
                                                           Width="{Binding #KeyShow.Bounds.Width}"
                                                           Height="{Binding #KeyShow.Bounds.Height}"
                                                           IsVisible="{Binding IsSaveInLocal,Converter={StaticResource ReverseBool}}"
                                                           ToolTip.ShowDelay="100" ToolTip.Tip="需要先保存一次情景才可设置"
                                                           ZIndex="2" />
                                                </Panel>


                                            </controls:SettingsExpander.Footer>

                                            <controls:SettingsExpander.IconSource>
                                                <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                         Glyph="&#xf4b8;" />
                                            </controls:SettingsExpander.IconSource>
                                        </controls:SettingsExpander>
                                        <controls:SettingsExpander Header="停止快捷键" Description="修改停止快捷键">
                                            <controls:SettingsExpander.Footer>
                                                <Panel>
                                                    <controls1:HotKeyShow x:Name="KeyShow1"
                                                                          HotKeyModel="{Binding Scenario.StopHotKey}"
                                                                          IsEnabled="{Binding IsSaveInLocal}">

                                                    </controls1:HotKeyShow>
                                                    <Panel Background="{DynamicResource ControlFillColorDisabledBrush}"
                                                           Width="{Binding #KeyShow1.Bounds.Width}"
                                                           Height="{Binding #KeyShow1.Bounds.Height}"
                                                           IsVisible="{Binding IsSaveInLocal,Converter={StaticResource ReverseBool}}"
                                                           ToolTip.ShowDelay="100" ToolTip.Tip="需要先保存一次情景才可设置"
                                                           ZIndex="2" />
                                                </Panel>
                                            </controls:SettingsExpander.Footer>

                                            <controls:SettingsExpander.IconSource>
                                                <controls:FontIconSource FontFamily="{StaticResource FluentFont}"
                                                                         Glyph="&#xf4b8;" />
                                            </controls:SettingsExpander.IconSource>
                                        </controls:SettingsExpander>
                                    </StackPanel>
                                </controls:SettingsExpander>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>
                    <ListBox Padding="0" Margin="0" PointerMoved="ListBox_OnMouseMove"
                             ItemsSource="{Binding NodeMethods, Mode=OneWay}">
                        <ListBox.ItemContainerTheme>
                            <ControlTheme TargetType="ListBoxItem">
                                <Setter Property="Template">
                                    <ControlTemplate>
                                        <ContentPresenter Name="PART_ContentPresenter"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Background="{TemplateBinding Background}"
                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          CornerRadius="{TemplateBinding CornerRadius}" />
                                    </ControlTemplate>

                                </Setter>
                            </ControlTheme>
                        </ListBox.ItemContainerTheme>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DataTemplate.DataType>
                                    <x:Type TypeName="objectModel:ObservableCollection"
                                            x:TypeArguments="x:Object" />
                                </DataTemplate.DataType>
                                <Expander Header="{ReflectionBinding [0].Plugin}" Margin="0">
                                    <ListBox Margin="0"
                                             PointerMoved="ListBox_OnMouseMove"
                                             ItemsSource="{Binding }">
                                        <ListBox.ItemContainerTheme>
                                            <ControlTheme TargetType="ListBoxItem">
                                                <Setter Property="Template">
                                                    <ControlTemplate>
                                                        <ContentPresenter Name="PART_ContentPresenter"
                                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{TemplateBinding Content}"
                                                                          Margin="0,0,0,5"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          CornerRadius="{TemplateBinding CornerRadius}" />
                                                    </ControlTemplate>

                                                </Setter>
                                            </ControlTheme>
                                        </ListBox.ItemContainerTheme>
                                        <ListBox.Resources>

                                            <!-- Declare some data templates for different types of data -->
                                            <taskEditor:InterfacesToString x:Key="InterfacesToString" />

                                            <!-- Declare a data template selector and assign it to a resource key -->

                                        </ListBox.Resources>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type customScenario:PointItem}">
                                                <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="3">
                                                    <DockPanel Panel.ZIndex="1">
                                                        <Border DockPanel.Dock="Top" CornerRadius="3 3 0 0">

                                                            <Border Height="20"

                                                                    CornerRadius="3 3 0 0">
                                                                <Border.Background>
                                                                    <SolidColorBrush Opacity="0.5"
                                                                        Color="{DynamicResource SystemAccentColor}" />
                                                                </Border.Background>
                                                                <TextBlock HorizontalAlignment="Center"
                                                                           Text="{Binding Title}"
                                                                           Foreground="White" />
                                                            </Border>

                                                        </Border>
                                                        <Border CornerRadius="0 0 3 3">
                                                            <Grid>
                                                                <Rectangle>
                                                                    <Rectangle.Fill>
                                                                        <SolidColorBrush
                                                                            Color="{DynamicResource Node.BackgroundColor}"
                                                                            Opacity="0.5" />
                                                                    </Rectangle.Fill>
                                                                </Rectangle>
                                                                <DockPanel>
                                                                    <ItemsControl DockPanel.Dock="Left"
                                                                        ItemsSource="{Binding Input}">
                                                                        <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <StackPanel Orientation="Vertical"
                                                                                    VerticalAlignment="Center" />
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                        <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                                                        <ItemsControl.ItemTemplate>
                                                                            <pages:MyDataTemplateSelector>
                                                                                <DataTemplate x:Key="InputTemplate"
                                                                                    DataType="{x:Type customScenario:ConnectorItem}">

                                                                                    <StackPanel
                                                                                        Orientation="Horizontal"
                                                                                        VerticalAlignment="Center">
                                                                                        <Border
                                                                                            Background="Transparent">
                                                                                            <!-- Set the border color to red -->
                                                                                            <Border.BorderBrush>
                                                                                                <SolidColorBrush
                                                                                                    Color="{DynamicResource SystemAccentColor}"
                                                                                                    Opacity="0.5" />
                                                                                            </Border.BorderBrush>
                                                                                            <!-- Set the border thickness to 2 -->
                                                                                            <Border.BorderThickness>2</Border.BorderThickness>
                                                                                            <!-- Set the border corner radius to 10 -->
                                                                                            <Border.CornerRadius>10</Border.CornerRadius>
                                                                                            <!-- Set the padding to 10 -->
                                                                                            <Border.Padding>5</Border.Padding>
                                                                                            <!-- Set the margin to 20 -->
                                                                                            <Border.Margin>5</Border.Margin>
                                                                                        </Border>
                                                                                        <!-- Declare a TextBlock element and give it a name -->

                                                                                        <TextBlock
                                                                                            VerticalAlignment="Center"
                                                                                            x:Name="textBlock"
                                                                                            FontSize="12"

                                                                                            Text="{Binding TypeName}">
                                                                                            <TextBlock.Background>
                                                                                                <SolidColorBrush
                                                                                                    Color="{DynamicResource TextFillColorPrimary}"
                                                                                                    Opacity="0.6" />
                                                                                            </TextBlock.Background>
                                                                                            <TextBlock.Foreground>
                                                                                                <SolidColorBrush
                                                                                                    Color="{DynamicResource TextFillColorInverse}" />
                                                                                            </TextBlock.Foreground>
                                                                                        </TextBlock>


                                                                                        <TextBlock
                                                                                            VerticalAlignment="Center"
                                                                                            Text="{Binding Title}">
                                                                                            <TextBlock.Foreground>
                                                                                                <SolidColorBrush
                                                                                                    Color="{DynamicResource TextFillColorPrimary}" />
                                                                                            </TextBlock.Foreground>
                                                                                        </TextBlock>
                                                                                    </StackPanel>


                                                                                </DataTemplate>
                                                                                <DataTemplate x:Key="StringTemplate"
                                                                                    DataType="{x:Type customScenario:ConnectorItem}">
                                                                                    <StackPanel Margin="10,0,0,0"
                                                                                        Orientation="Horizontal"
                                                                                        VerticalAlignment="Center"
                                                                                        HorizontalAlignment="Right">
                                                                                        <TextBlock
                                                                                            VerticalAlignment="Center"
                                                                                            x:Name="textBlock"
                                                                                            Text="{Binding Title}"
                                                                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                                                        <TextBox Margin="10,5,10,5"
                                                                                            MinWidth="40"
                                                                                            Text="{Binding InputObject}"
                                                                                            Watermark="字符串" />
                                                                                    </StackPanel>

                                                                                </DataTemplate>
                                                                                <DataTemplate x:Key="IntTemplate"
                                                                                    DataType="{x:Type customScenario:ConnectorItem}">
                                                                                    <StackPanel Margin="10,0,0,0"
                                                                                        Orientation="Horizontal"
                                                                                        VerticalAlignment="Center"
                                                                                        HorizontalAlignment="Right">
                                                                                        <TextBlock
                                                                                            VerticalAlignment="Center"
                                                                                            x:Name="textBlock"
                                                                                            Text="{Binding Title}"
                                                                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                                                        <controls:NumberBox
                                                                                            Margin="10,5,10,5"
                                                                                            MinWidth="40"
                                                                                            ValidationMode="InvalidInputOverwritten"
                                                                                            SpinButtonPlacementMode="Inline"
                                                                                            Maximum="2147483647"
                                                                                            Minimum="-2147483648"
                                                                                            Value="{Binding InputObject, Mode=TwoWay}"
                                                                                            PlaceholderText="整型" />
                                                                                    </StackPanel>

                                                                                </DataTemplate>
                                                                                <DataTemplate x:Key="DoubleTemplate"
                                                                                    DataType="{x:Type customScenario:ConnectorItem}">
                                                                                    <StackPanel Margin="10,0,0,0"
                                                                                        Orientation="Horizontal"
                                                                                        VerticalAlignment="Center"
                                                                                        HorizontalAlignment="Right">
                                                                                        <TextBlock
                                                                                            VerticalAlignment="Center"
                                                                                            x:Name="textBlock"
                                                                                            Text="{Binding Title}"
                                                                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                                                        <controls:NumberBox
                                                                                            Margin="10,5,10,5"
                                                                                            MinWidth="40"
                                                                                            SimpleNumberFormat="F2"
                                                                                            SpinButtonPlacementMode="Inline"
                                                                                            ValidationMode="InvalidInputOverwritten"
                                                                                            Value="{Binding InputObject, Mode=TwoWay}"
                                                                                            PlaceholderText="浮点" />
                                                                                    </StackPanel>

                                                                                </DataTemplate>
                                                                                <DataTemplate x:Key="BoolTemplate"
                                                                                    DataType="{x:Type customScenario:ConnectorItem}">
                                                                                    <StackPanel Margin="10,0,0,0"
                                                                                        Orientation="Horizontal"
                                                                                        VerticalAlignment="Center"
                                                                                        HorizontalAlignment="Right">
                                                                                        <TextBlock
                                                                                            VerticalAlignment="Center"
                                                                                            x:Name="textBlock"
                                                                                            Text="{Binding Title}"
                                                                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                                                        <ToggleSwitch
                                                                                            Margin="10,5,10,5"
                                                                                            MinWidth="40"
                                                                                            IsChecked="{Binding InputObject, Mode=TwoWay}" />
                                                                                    </StackPanel>

                                                                                </DataTemplate>
                                                                                <DataTemplate
                                                                                    x:Key="SearchItemTemplate"
                                                                                    DataType="{x:Type customScenario:ConnectorItem}">
                                                                                    <StackPanel Margin="10,0,0,0"
                                                                                        Orientation="Horizontal"
                                                                                        VerticalAlignment="Center"
                                                                                        HorizontalAlignment="Right">
                                                                                        <TextBlock
                                                                                            VerticalAlignment="Center"
                                                                                            x:Name="textBlock"
                                                                                            Text="{Binding Title}"
                                                                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                                                        <controls1:SearchItemShow
                                                                                            Margin="10,5,10,5"
                                                                                            ToolTip.Tip="{Binding RelativeSource={RelativeSource Self},Path=OnlyKey}"
                                                                                            Click="SearchItemShow_OnClick"
                                                                                            OnlyKey="{Binding InputObject, Mode=TwoWay}" />
                                                                                    </StackPanel>

                                                                                </DataTemplate>

                                                                            </pages:MyDataTemplateSelector>
                                                                        </ItemsControl.ItemTemplate>
                                                                    </ItemsControl>


                                                                    <ItemsControl DockPanel.Dock="Right"
                                                                        VerticalAlignment="Center"
                                                                        ItemsSource="{Binding Output}">
                                                                        <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <StackPanel Orientation="Vertical"
                                                                                    HorizontalAlignment="Right" />
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                        <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <StackPanel Orientation="Horizontal"
                                                                                    VerticalAlignment="Center"
                                                                                    HorizontalAlignment="Right">

                                                                                    <TextBlock
                                                                                        VerticalAlignment="Center"
                                                                                        x:Name="textBlock"
                                                                                        Text="{Binding Title}">
                                                                                        <TextBlock.Foreground>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorPrimary}" />
                                                                                        </TextBlock.Foreground>
                                                                                    </TextBlock>
                                                                                    <TextBlock
                                                                                        VerticalAlignment="Center"
                                                                                        FontSize="12"

                                                                                        Text="{Binding TypeName}">
                                                                                        <TextBlock.Background>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                                                Opacity="0.6" />

                                                                                        </TextBlock.Background>
                                                                                        <TextBlock.Foreground>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource TextFillColorInverse}" />
                                                                                        </TextBlock.Foreground>
                                                                                    </TextBlock>
                                                                                    <controls:FontIcon
                                                                                        FontFamily="{StaticResource FluentFont}"
                                                                                        Glyph="&#xf10c;"
                                                                                        ToolTip.Tip="{Binding Interfaces, Converter={StaticResource InterfacesToString}}"
                                                                                        ToolTip.ShowDelay="0"
                                                                                        IsVisible="{Binding Interfaces, Converter={StaticResource IfNullVisibilityHidden}}" />
                                                                                    <Border Background="Transparent">
                                                                                        <!-- Set the border color to red -->
                                                                                        <Border.BorderBrush>
                                                                                            <SolidColorBrush
                                                                                                Color="{DynamicResource SystemAccentColor}"
                                                                                                Opacity="0.5" />
                                                                                        </Border.BorderBrush>
                                                                                        <!-- Set the border thickness to 2 -->
                                                                                        <Border.BorderThickness>2</Border.BorderThickness>
                                                                                        <!-- Set the border corner radius to 10 -->
                                                                                        <Border.CornerRadius>10</Border.CornerRadius>
                                                                                        <!-- Set the padding to 10 -->
                                                                                        <Border.Padding>5</Border.Padding>
                                                                                        <!-- Set the margin to 20 -->
                                                                                        <Border.Margin>5</Border.Margin>
                                                                                    </Border>
                                                                                    <!-- Declare a TextBlock element and give it a name -->

                                                                                </StackPanel>
                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                    </ItemsControl>
                                                                </DockPanel>
                                                            </Grid>
                                                        </Border>


                                                    </DockPanel>
                                                </Border>


                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Expander>

                            </DataTemplate>

                        </ListBox.ItemTemplate>


                    </ListBox>
                </ListBox>
            </ScrollViewer>

        </Border>
        <!-- 拖动部分 -->
        <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Width="5" HorizontalAlignment="Center"
                      VerticalAlignment="Stretch" />
        <!-- 右边部分 -->
        <Border Grid.Column="2">
            <Grid ShowGridLines="True">
                <Grid Panel.ZIndex="-2">
                    <Grid.Background>
                        <SolidColorBrush Color="{DynamicResource NodifyEditor.BackgroundColor}" Opacity="0.5" />
                    </Grid.Background>
                </Grid>
                <controls2:NodifyEditor x:Name="Editor"
                                        d:DataContext="{}"
                                        DragDrop.AllowDrop="True"
                                        PendingConnection="{Binding PendingConnection}"
                                        DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                        Connections="{Binding Scenario.connections}"
                                        ItemsSource="{Binding Scenario.nodes}">
                    <controls2:NodifyEditor.Resources>
                        <taskEditor:NodeStatusBorderCtr x:Key="NodeStatusBorderCtr" />
                    </controls2:NodifyEditor.Resources>
                    <controls2:NodifyEditor.GridLineTemplate>
                        <DataTemplate>
                            <controls2:LargeGridLine
                                Width="{Binding $parent[controls2:NodifyEditor].Bounds.Width}"
                                OffsetX="{Binding $parent[controls2:NodifyEditor].OffsetX}"
                                OffsetY="{Binding $parent[controls2:NodifyEditor].OffsetY}"
                                Zoom="{Binding $parent[controls2:NodifyEditor].Zoom}"
                                Height="{Binding $parent[controls2:NodifyEditor].Bounds.Height}"
                                ZIndex="-2">
                                <controls2:LargeGridLine.Brush>
                                    <SolidColorBrush Color="Gainsboro" Opacity="0.5" />
                                </controls2:LargeGridLine.Brush>
                            </controls2:LargeGridLine>
                        </DataTemplate>
                    </controls2:NodifyEditor.GridLineTemplate>


                    <controls2:NodifyEditor.ConnectionTemplate>
                        <DataTemplate DataType="{x:Type customScenario:ConnectionItem}">
                            <Grid>
                                <controls2:Connection Source="{Binding Source.Anchor}" Focusable="True"
                                                      Target="{Binding Target.Anchor}">
                                    <controls2:Connection.ContextFlyout>
                                        <MenuFlyout>
                                            <!-- ReSharper disable once Xaml.RedundantResource -->
                                            <MenuItem Header="删除此连接"
                                                      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                      Command="{Binding $parent[Window].((taskEditor1:TaskEditorViewModel)DataContext).DelConnectionCommand}"
                                                      CommandParameter="{Binding }" />
                                        </MenuFlyout>
                                    </controls2:Connection.ContextFlyout>
                                    <controls2:Connection.Stroke>
                                        <SolidColorBrush Color="{DynamicResource SystemAccentColor}"
                                                         Opacity="0.5" />
                                    </controls2:Connection.Stroke>
                                </controls2:Connection>
                            </Grid>

                        </DataTemplate>
                    </controls2:NodifyEditor.ConnectionTemplate>

                    <controls2:NodifyEditor.PendingConnectionTemplate>
                        <DataTemplate DataType="{x:Type taskEditor1:PendingConnectionViewModel}">
                            <controls2:PendingConnection StartedCommand="{Binding StartCommand}"
                                                         CompletedCommand="{Binding FinishCommand}"
                                                         EnablePreview="True"
                                                         EnableSnapping="True"

                                                         PreviewTarget="{Binding PreviewTarget, Mode=TwoWay}">
                                <controls2:PendingConnection.Stroke>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColor}"
                                                     Opacity="0.5" />
                                </controls2:PendingConnection.Stroke>
                                <controls2:PendingConnection.Background>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColor}"
                                                     Opacity="0.8" />
                                </controls2:PendingConnection.Background>
                                <TextBlock Text="{Binding PreviewText}" />
                            </controls2:PendingConnection>

                        </DataTemplate>
                    </controls2:NodifyEditor.PendingConnectionTemplate>
                    <controls2:NodifyEditor.ItemTemplate>
                        <DataTemplate DataType="{x:Type customScenario:PointItem}">
                            <controls2:Node
                                Classes.Status0="{Binding  Status, Converter={StaticResource NodeStatusBorderCtr},ConverterParameter=0}"
                                Classes.Status1="{Binding  Status, Converter={StaticResource NodeStatusBorderCtr},ConverterParameter=1}"
                                Classes.Status2="{Binding  Status, Converter={StaticResource NodeStatusBorderCtr},ConverterParameter=2}"
                                Classes.Status3="{Binding  Status, Converter={StaticResource NodeStatusBorderCtr},ConverterParameter=3}"
                                x:Name="Node"
                                Input="{Binding Input}"
                                Location="{Binding Location,Mode=TwoWay}"
                                VerticalAlignment="Center"
                                Output="{Binding Output}">
                                <controls2:Node.ContextFlyout>
                                    <MenuFlyout>
                                        <!-- ReSharper disable once Xaml.RedundantResource -->
                                        <MenuItem Header="复制节点"
                                                  Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                  Command="{Binding $parent[Grid].((taskEditor1:TaskEditorViewModel)DataContext).CopyNodeCommand}"
                                                  CommandParameter="{Binding }" />
                                        <!-- ReSharper disable once Xaml.RedundantResource -->
                                        <MenuItem Header="删除此节点"
                                                  Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                  Command="{Binding $parent[Grid].((taskEditor1:TaskEditorViewModel)DataContext).DelNodeCommand}"
                                                  CommandParameter="{Binding }" />

                                    </MenuFlyout>
                                </controls2:Node.ContextFlyout>
                                <controls2:Node.Styles>
                                    <Style Selector="controls2|Node.Status0">
                                        <Setter Property="BorderBrush" Value="LightGray" />
                                    </Style>
                                    <Style Selector="controls2|Node.Status1">
                                        <Setter Property="BorderBrush" Value="GreenYellow" />
                                    </Style>
                                    <Style Selector="controls2|Node.Status2">
                                        <Setter Property="BorderBrush" Value="OrangeRed" />
                                    </Style>
                                    <Style Selector="controls2|Node.Status3">
                                        <Setter Property="BorderBrush" Value="Yellow" />
                                    </Style>
                                </controls2:Node.Styles>
                                <controls2:Node.Resources>

                                    <taskEditor:InterfacesToString x:Key="InterfacesToString" />


                                </controls2:Node.Resources>


                                <controls2:Node.HeaderBrush>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColor}"
                                                     Opacity="0.5" />
                                </controls2:Node.HeaderBrush>
                                <controls2:Node.Header>
                                    <TextBlock Text="{Binding Title}" Foreground="White"
                                               HorizontalAlignment="Center" />
                                </controls2:Node.Header>
                                <controls2:Node.InputConnectorTemplate>
                                    <DataTemplate DataType="{x:Type customScenario:ConnectorItem}">

                                        <ContentPresenter Content="{Binding .}" Name="ContentPresenter">
                                            <ContentPresenter.ContextFlyout>
                                                <MenuFlyout>
                                                    <!-- ReSharper disable once Xaml.RedundantResource -->
                                                    <MenuItem Header="切换自输入/连接器"
                                                              Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                              Command="{Binding $parent[controls2:NodifyEditor].((taskEditor1:TaskEditorViewModel)DataContext).SwitchConnectorCommand}"
                                                              CommandParameter="{Binding #ContentPresenter  }" />
                                                </MenuFlyout>
                                            </ContentPresenter.ContextFlyout>
                                            <ContentPresenter.DataTemplates>
                                                <pages:MyDataTemplateSelector>
                                                    <DataTemplate x:Key="InputTemplate"
                                                                  DataType="{x:Type customScenario:ConnectorItem}">
                                                        <controls2:NodeInput
                                                            ToolTip.Tip="{Binding InputObject}"
                                                            ToolTip.ShowDelay="0"
                                                            IsConnected="{Binding IsConnected}"
                                                            Anchor="{Binding Anchor, Mode=TwoWay}">
                                                            <controls2:NodeInput.Header>

                                                                <StackPanel Orientation="Horizontal"
                                                                            VerticalAlignment="Center"
                                                                            HorizontalAlignment="Right">
                                                                    <StackPanel.Styles>
                                                                        <Style
                                                                            Selector="TextBlock#TypeNametextBlock">
                                                                            <Setter Property="Background">
                                                                                <Setter.Value>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorPrimary}"
                                                                                        Opacity="0.6" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="Foreground">
                                                                                <Setter.Value>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorInverse}" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                        <Style Selector="TextBlock.IsNotUsed">
                                                                            <Setter Property="Background">
                                                                                <Setter.Value>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource ControlFillColorDisabled}"
                                                                                        Opacity="0.6" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="Foreground">
                                                                                <Setter.Value>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorTertiary}" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </StackPanel.Styles>
                                                                    <TextBlock VerticalAlignment="Center"
                                                                               FontSize="12"
                                                                               x:Name="TypeNametextBlock"
                                                                               Classes.IsNotUsed="{Binding IsNotUsed}"
                                                                               Text="{Binding TypeName}" />
                                                                    <TextBlock VerticalAlignment="Center"
                                                                               x:Name="textBlock"
                                                                               Classes.IsNotUsed="{Binding IsNotUsed}"
                                                                               Text="{Binding Title}" />
                                                                </StackPanel>
                                                            </controls2:NodeInput.Header>
                                                            <controls2:NodeInput.BorderBrush>
                                                                <SolidColorBrush
                                                                    Color="{DynamicResource SystemAccentColor}"
                                                                    Opacity="0.5" />
                                                            </controls2:NodeInput.BorderBrush>
                                                        </controls2:NodeInput>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="StringTemplate"
                                                                  DataType="{x:Type customScenario:ConnectorItem}">
                                                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal"
                                                                    VerticalAlignment="Center"
                                                                    IsHitTestVisible="True"

                                                                    HorizontalAlignment="Right">
                                                            <TextBlock VerticalAlignment="Center"
                                                                       x:Name="textBlock"
                                                                       Text="{Binding Title}"
                                                                       Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                            <TextBox Margin="10,5,10,5" MinWidth="40"
                                                                     Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                                     Text="{Binding InputObject}" Watermark="字符串" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="IntTemplate"
                                                                  DataType="{x:Type customScenario:ConnectorItem}">
                                                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Right">
                                                            <TextBlock VerticalAlignment="Center"
                                                                       x:Name="textBlock"
                                                                       Text="{Binding Title}"
                                                                       Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                            <controls:NumberBox Margin="10,5,10,5" MinWidth="40"
                                                                ValidationMode="InvalidInputOverwritten"
                                                                SpinButtonPlacementMode="Inline"
                                                                Maximum="2147483647" Minimum="-2147483648"
                                                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                                Value="{Binding InputObject, Mode=TwoWay }"
                                                                PlaceholderText="整型" />
                                                        </StackPanel>

                                                    </DataTemplate>
                                                    <DataTemplate x:Key="DoubleTemplate"
                                                                  DataType="{x:Type customScenario:ConnectorItem}">
                                                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Right">
                                                            <TextBlock VerticalAlignment="Center"
                                                                       x:Name="textBlock"
                                                                       Text="{Binding Title}"
                                                                       Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                            <controls:NumberBox Margin="10,5,10,5" MinWidth="40"
                                                                SimpleNumberFormat="F2"
                                                                SpinButtonPlacementMode="Inline"
                                                                ValidationMode="InvalidInputOverwritten"
                                                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                                Value="{Binding InputObject, Mode=TwoWay}"
                                                                PlaceholderText="浮点" />
                                                        </StackPanel>

                                                    </DataTemplate>
                                                    <DataTemplate x:Key="BoolTemplate"
                                                                  DataType="{x:Type customScenario:ConnectorItem}">
                                                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Right">
                                                            <TextBlock VerticalAlignment="Center"
                                                                       x:Name="textBlock"
                                                                       Text="{Binding Title}"
                                                                       Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                            <ToggleSwitch Margin="10,5,10,5" MinWidth="40"
                                                                          IsChecked="{Binding InputObject, Mode=TwoWay}" />
                                                        </StackPanel>

                                                    </DataTemplate>
                                                    <DataTemplate x:Key="SearchItemTemplate"
                                                                  DataType="{x:Type customScenario:ConnectorItem}">
                                                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalAlignment="Right">
                                                            <TextBlock VerticalAlignment="Center"
                                                                       x:Name="textBlock"
                                                                       Text="{Binding Title}"
                                                                       Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                                            <controls1:SearchItemShow Margin="10,5,10,5"
                                                                ToolTip.Tip="{Binding RelativeSource={RelativeSource Self},Path=OnlyKey}"
                                                                Click="SearchItemShow_OnClick"
                                                                OnlyKey="{Binding InputObject, Mode=TwoWay}" />
                                                        </StackPanel>

                                                    </DataTemplate>
                                                </pages:MyDataTemplateSelector>
                                            </ContentPresenter.DataTemplates>
                                        </ContentPresenter>

                                    </DataTemplate>


                                    <!-- Use a ContentControl to display the single element -->


                                </controls2:Node.InputConnectorTemplate>

                                <controls2:Node.OutputConnectorTemplate>
                                    <DataTemplate DataType="{x:Type customScenario:ConnectorItem}">
                                        <controls2:NodeOutput
                                            x:Name="NodeOutput"
                                            ToolTip.Tip="{Binding InputObject}"
                                            ToolTip.ShowDelay="0"
                                            VerticalAlignment="Center"
                                            IsConnected="{Binding IsConnected}"
                                            Anchor="{Binding Anchor, Mode=TwoWay}">
                                            <controls2:NodeOutput.Header>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">

                                                    <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                               Text="{Binding Title}" />
                                                    <TextBlock VerticalAlignment="Center" FontSize="12"
                                                               Text="{Binding TypeName}">
                                                        <TextBlock.Background>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                Opacity="0.6" />
                                                        </TextBlock.Background>
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorInverse}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>

                                                    <controls:FontIcon FontFamily="{StaticResource FluentFont}"
                                                                       Glyph="&#xf10c;"
                                                                       ToolTip.Tip="{Binding Interfaces, Converter={StaticResource InterfacesToString}}"
                                                                       ToolTip.ShowDelay="0"
                                                                       IsVisible="{Binding Interfaces, Converter={StaticResource IfNullVisibilityHidden}}" />
                                                </StackPanel>
                                            </controls2:NodeOutput.Header>
                                            <controls2:NodeOutput.BorderBrush>
                                                <SolidColorBrush
                                                    Color="{DynamicResource SystemAccentColor}"
                                                    Opacity="0.5" />
                                            </controls2:NodeOutput.BorderBrush>
                                        </controls2:NodeOutput>
                                    </DataTemplate>
                                </controls2:Node.OutputConnectorTemplate>

                            </controls2:Node>

                        </DataTemplate>
                    </controls2:NodifyEditor.ItemTemplate>

                </controls2:NodifyEditor>

            </Grid>
        </Border>
        <Grid Grid.Row="1" Grid.Column="2"
              Panel.ZIndex="10">
            <Border

                Padding="12"
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                BorderThickness="1"
                CornerRadius="4">

                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="30"
                        Opacity="0.4"
                        Color="#202020" />
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <converter:ReverseBoolToVisibilityConverter x:Key="reverseBoolToVisibilityConverter" />
                    </StackPanel.Resources>
                    <Button FontSize="25" ToolTip.Tip="清理未连接节点" ToolTip.ShowDelay="100"
                            Command="{Binding CleanUnusedNodeCommand}">
                        <controls:FontIcon FontFamily="{StaticResource FluentFont}" Glyph="&#xf34c;" />
                    </Button>
                    <ItemsControl Grid.Column="4"
                                  IsVisible="{Binding Scenario.IsHaveInputValue,Converter={StaticResource reverseBoolToVisibilityConverter}}">
                        <Button FontSize="25" ToolTip.Tip="运行测试" ToolTip.ShowDelay="100"
                                IsVisible="{Binding Scenario.IsRunning,Converter={StaticResource reverseBoolToVisibilityConverter}}"
                                Foreground="GreenYellow"
                                Command="{Binding VerifyNodeCommand}">
                            <controls:FontIcon Foreground="GreenYellow" FontFamily="{StaticResource FluentFont}"
                                               Glyph="&#xf605;" />
                        </Button>
                        <Button FontSize="25" ToolTip.Tip="停止测试" ToolTip.ShowDelay="100"
                                IsVisible="{Binding Scenario.IsRunning}"

                                Command="{Binding StopCustomScenarioCommand}">
                            <controls:FontIcon Foreground="OrangeRed" FontFamily="{StaticResource FluentFont}"
                                               Glyph="&#xf72a;" />
                        </Button>
                    </ItemsControl>

                    <Button FontSize="25" ToolTip.Tip="保存" ToolTip.ShowDelay="100"
                            Command="{Binding SaveCustomScenarioCommand}">
                        <controls:FontIcon FontFamily="{StaticResource FluentFont}" Glyph="&#xf67f;" />
                    </Button>
                    <Button FontSize="25" ToolTip.Tip="退出并保存" ToolTip.ShowDelay="100"
                            Command="{Binding SaveAndQuitCustomScenarioCommand}"
                            CommandParameter="{Binding $parent[windowing:AppWindow]}">
                        <controls:FontIcon FontFamily="{StaticResource FluentFont}" Glyph="&#xea45;" />
                    </Button>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>


</windowing:AppWindow>