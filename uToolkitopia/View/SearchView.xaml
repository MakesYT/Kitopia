<Window x:Class="Kitopia.View.SearchView"
        x:Name="w"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Kitopia.View"
        xmlns:localM="clr-namespace:Kitopia.Core.ViewModel;assembly=Core"
        xmlns:crt="clr-namespace:Kitopia.Converter"
        mc:Ignorable="d" BorderThickness="10"
        WindowStartupLocation="Manual"
        
        Top="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={StaticResource doubleQuarterConverter}}"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        d:DataContext="{d:DesignInstance localM:SearchViewModel}"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        AllowsTransparency="True"
        Background="Transparent" ShowInTaskbar="False"
        Title="SearchView" Window.SizeToContent="Height" Width="800" WindowStyle="None" Deactivated="w_Deactivated" Activated="w_Activated" >
    
    <Window.Effect>
        <DropShadowEffect ShadowDepth="5" Color="Black" Opacity="0.5" BlurRadius="10"/>
    </Window.Effect>
    <Window.Left>
        <MultiBinding Converter="{StaticResource doubleHalfConverter}">

            <Binding Source="{x:Static SystemParameters.PrimaryScreenWidth}"/>

            <Binding ElementName="w" Path="Width"/>

        </MultiBinding>
    </Window.Left>

    <StackPanel x:Name="stackPanel">
        <Grid>
            <hc:TextBox x:Name="tx" FontSize="30" hc:InfoElement.Placeholder="搜索..." hc:InfoElement.ShowClearButton="True" Height="65" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}" AutomationProperties.HelpText="f">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged"  >
                        <i:ChangePropertyAction PropertyName="{Binding CurrentCell, ElementName=dataGrid}" Value="null" Increment="True" TargetName="{Binding ElementName=dataGrid, Mode=OneWay}"/>
                        <i:InvokeCommandAction Command="{Binding OpenFileCommand}" CommandParameter="{Binding SelectedValue, ElementName=dataGrid}" >

                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
            </hc:TextBox>

        </Grid>
        <hc:TextBox FontSize="15" Text="Everthing服务未运行,请检查" Height="35" IsReadOnly="True" Visibility="{Binding EverythingIsOK, Converter={StaticResource reverseBoolToVisibilityConverter}}" Margin="0,0,0,0">

        </hc:TextBox>
        <DataGrid x:Name="dataGrid"  SelectedIndex="{Binding SelectedIndex,Mode=TwoWay}" RowHeight="64" HeadersVisibility="None" MaxHeight="300" ItemsSource="{Binding Items}"  AutoGenerateColumns="False" Margin="0,10,0,0">
            
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged"  >
                    <i:ChangePropertyAction PropertyName="{Binding CurrentCell, ElementName=dataGrid}" Value="null" Increment="True" TargetName="{Binding ElementName=dataGrid, Mode=OneWay}"/>
                    <i:InvokeCommandAction Command="{Binding OpenFileCommand}" CommandParameter="{Binding SelectedValue, ElementName=dataGrid}" >
                        
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.RowStyle>
                <!-- 根据条件设置行的可见性 -->
                <Style TargetType="DataGridRow" >
                    <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource boolToVisibilityConverter}}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="图标" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Width="48" Height="48" Source="{Binding icon, Converter={StaticResource pathToImageConverter}}"></Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="操作" Width="*" Binding="{Binding Path=fileName}" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="操作" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="管理员" Visibility="{Binding Path=fileType, Converter={StaticResource enumToVisibilityConverter}, ConverterParameter='RunAsAdmin'}" Command="{Binding Path=DataContext.RunAsAdminCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"  CommandParameter="{Binding}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown"  >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CommandByButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="">

                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                    
                                </i:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="操作" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="文件夹" Visibility="{Binding Path=fileType, Converter={StaticResource enumToVisibilityConverter}, ConverterParameter='Folder'}" Command="{Binding Path=DataContext.OpenFolderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"  CommandParameter="{Binding}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown"  >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CommandByButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">

                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="操作" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="控制台" Visibility="{Binding Path=fileType, Converter={StaticResource enumToVisibilityConverter}, ConverterParameter='Console'}" Command="{Binding Path=DataContext.OpenFolderInTerminalCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"  CommandParameter="{Binding}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown"  >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CommandByButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">

                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                    
                                </i:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
    </StackPanel>


</Window>
