<ui:FluentWindow x:Class="Kitopia.View.TaskEditor"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:nodify="https://miroiu.github.io/nodify"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 xmlns:taskEditor="clr-namespace:Core.ViewModel.TaskEditor;assembly=Core"
                 xmlns:plugin="clr-namespace:Kitopia.View.Pages.Plugin"
                 WindowBackdropType="Acrylic"
                 WindowCornerPreference="Round"
                 ExtendsContentIntoTitleBar="True"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance taskEditor:TaskEditorViewModel}"
                 Title="TaskEditor" Height="450" Width="800">
    <Window.Resources>
        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{StaticResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Viewport="0 0 20 20"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource SmallGridGeometry}" />

        <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Opacity="0.5"
                      Viewport="0 0 100 100"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource LargeGridGeometry}" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="42" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ui:TitleBar Title="任务编排" Grid.ColumnSpan="2" />
        <!-- 左边部分 -->
        <Border Grid.Row="1" Grid.Column="0">
            <StackPanel>

                <ListBox MouseMove="ListBox_OnMouseMove"
                         ItemsSource="{Binding NodeMethods,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border
                                            x:Name="Border"
                                            Margin="0"
                                            Padding="{TemplateBinding Padding}"
                                            Background="Transparent"
                                            BorderThickness="1"
                                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.Resources>

                        <!-- Declare some data templates for different types of data -->
                        <DataTemplate x:Key="StringTemplate" DataType="{x:Type taskEditor:ConnectorItem}"> 
                            <TextBox Margin="5" MinWidth="40" Text="{Binding InputObject}" Foreground="Blue"
                                     FontSize="24" />
                        </DataTemplate>
                        <DataTemplate x:Key="IntTemplate">
                            <TextBlock Text="{Binding}" Foreground="Red" FontSize="18" />
                        </DataTemplate>
                        <DataTemplate x:Key="BoolTemplate">
                            <CheckBox IsChecked="{Binding}" IsEnabled="False" />
                        </DataTemplate>
                        <DataTemplate x:Key="InputTemplate" DataType="{x:Type taskEditor:ConnectorItem}">

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Border>
                                    <!-- Set the border color to red -->
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="DodgerBlue" />
                                    </Border.BorderBrush>
                                    <!-- Set the border thickness to 2 -->
                                    <Border.BorderThickness>2</Border.BorderThickness>
                                    <!-- Set the border corner radius to 10 -->
                                    <Border.CornerRadius>10</Border.CornerRadius>
                                    <!-- Set the background color to light gray -->
                                    <Border.Background>
                                        <SolidColorBrush Color="Transparent" />
                                    </Border.Background>
                                    <!-- Set the padding to 10 -->
                                    <Border.Padding>5</Border.Padding>
                                    <!-- Set the margin to 20 -->
                                    <Border.Margin>5</Border.Margin>
                                </Border>
                                <!-- Declare a TextBlock element and give it a name -->
                                <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                           Text="{Binding  Title}" />
                            </StackPanel>


                        </DataTemplate>
                        <!-- Declare a data template selector and assign it to a resource key -->
                        <plugin:MyDataTemplateSelector x:Key="MyDataTemplateSelector" />

                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:PointItem}">
                            <DockPanel ZIndex="1">
                                <Grid DockPanel.Dock="Top">
                                    <Rectangle Opacity="0.5"
                                               Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type DockPanel}}}"
                                               Height="20">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{DynamicResource  SystemAccentColorSecondary}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding Title}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource TextOnAccentFillColorPrimary}" />
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Grid>
                                <Grid>
                                    <Rectangle Fill="WhiteSmoke" Opacity="0.5"
                                               Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type DockPanel}}}" />
                                    <DockPanel
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Rectangle}}}">
                                        <ItemsControl DockPanel.Dock="Left" ItemsSource="{Binding Input}">
                                            <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <!-- Use a ContentControl to display the single element -->
                                                        <ContentControl Content="{Binding}">
                                                            <!-- Set the ContentTemplateSelector to the data template selector resource -->
                                                            <ContentControl.ContentTemplateSelector>
                                                                <StaticResource
                                                                    ResourceKey="MyDataTemplateSelector" />
                                                            </ContentControl.ContentTemplateSelector>
                                                        </ContentControl>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>


                                        <ItemsControl DockPanel.Dock="Right" ItemsSource="{Binding Output}">
                                            <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                        <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                                   Text="{Binding  Title}" />
                                                        <Border>
                                                            <!-- Set the border color to red -->
                                                            <Border.BorderBrush>
                                                                <SolidColorBrush Color="DodgerBlue" />
                                                            </Border.BorderBrush>
                                                            <!-- Set the border thickness to 2 -->
                                                            <Border.BorderThickness>2</Border.BorderThickness>
                                                            <!-- Set the border corner radius to 10 -->
                                                            <Border.CornerRadius>10</Border.CornerRadius>
                                                            <!-- Set the background color to light gray -->
                                                            <Border.Background>
                                                                <SolidColorBrush Color="Transparent" />
                                                            </Border.Background>
                                                            <!-- Set the padding to 10 -->
                                                            <Border.Padding>5</Border.Padding>
                                                            <!-- Set the margin to 20 -->
                                                            <Border.Margin>5</Border.Margin>
                                                        </Border>
                                                        <!-- Declare a TextBlock element and give it a name -->

                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DockPanel>
                                </Grid>


                            </DockPanel>

                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>
                <ui:Button Visibility="Collapsed" x:Name="add" Content="添加" Command="{Binding AddNodesCommand}" />
            </StackPanel>

        </Border>

        <!-- 右边部分 -->
        <Border Grid.Row="1" Grid.Column="1">
            <Grid Background="{StaticResource NodifyEditor.BackgroundBrush}">

                <nodify:NodifyEditor x:Name="Editor"
                                     DataContext="{Binding}"
                                     AllowDrop="True"
                                     DragDrop.Drop="NodifyEditor_Drop"
                                     DragDrop.DragOver="NodifyEditor_DragOver"
                                     DragDrop.DragEnter="NodifyEditor_DragEnter"
                                     DragDrop.DragLeave="NodifyEditor_DragLeave"

                                     EnableRealtimeSelection="True"

                                     PendingConnection="{Binding PendingConnection}"
                                     DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                     Background="{StaticResource SmallGridLinesDrawingBrush}"
                                     Connections="{Binding Connections}"
                                     ItemsSource="{Binding Nodes}">
                    <nodify:NodifyEditor.ItemContainerStyle>
                        <Style TargetType="{x:Type nodify:ItemContainer}">
                            <Setter Property="Location"
                                    Value="{Binding Location,Mode=TwoWay}" />
                        </Style>
                    </nodify:NodifyEditor.ItemContainerStyle>
                    <nodify:NodifyEditor.Resources>
                        <Style TargetType="{x:Type nodify:PendingConnection}"
                               BasedOn="{StaticResource {x:Type nodify:PendingConnection}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type nodify:PendingConnection}">
                                        <Canvas>
                                            <nodify:Connection Source="{TemplateBinding SourceAnchor}"
                                                               Target="{TemplateBinding TargetAnchor}"
                                                               Direction="{TemplateBinding Direction}"
                                                               StrokeThickness="{TemplateBinding StrokeThickness}"

                                                               TargetOffsetMode="None">

                                                <nodify:Connection.Style>
                                                    <Style TargetType="nodify:Connection"
                                                           BasedOn="{StaticResource {x:Type nodify:Connection}}">
                                                        <Setter Property="Stroke"
                                                                Value="{DynamicResource Connection.StrokeBrush}" />
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource Connection.StrokeBrush}" />

                                                    </Style>
                                                </nodify:Connection.Style>
                                            </nodify:Connection>
                                            <Border Background="{TemplateBinding Background}"
                                                    Canvas.Left="{Binding TargetAnchor.X, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Canvas.Top="{Binding TargetAnchor.Y, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="Visible"
                                                    Padding="{TemplateBinding Padding}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    CornerRadius="3"
                                                    Margin="15">
                                                <ContentPresenter />
                                            </Border>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </nodify:NodifyEditor.Resources>


                    <nodify:NodifyEditor.ConnectionTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:ConnectionItem}">
                            <nodify:Connection Source="{Binding Source.Anchor}"
                                               Target="{Binding Target.Anchor}" />
                        </DataTemplate>
                    </nodify:NodifyEditor.ConnectionTemplate>

                    <nodify:NodifyEditor.PendingConnectionTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:PendingConnectionViewModel}">
                            <nodify:PendingConnection StartedCommand="{Binding StartCommand}"
                                                      CompletedCommand="{Binding FinishCommand}"
                                                      EnablePreview="True"
                                                      EnableSnapping="True"
                                                      Target="{Binding PreviewTarget,Mode=OneWayToSource}"
                                                      PreviewTarget="{Binding PreviewTarget,Mode=OneWayToSource}"
                                                      Content="{Binding PreviewText}" />
                        </DataTemplate>
                    </nodify:NodifyEditor.PendingConnectionTemplate>
                    <nodify:NodifyEditor.ItemTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:PointItem}">
                            <nodify:Node Header="{Binding Title}"
                                         Input="{Binding Input}"

                                         Output="{Binding Output}">
                                <nodify:Node.Resources>
                                    <DataTemplate x:Key="StringTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
                                        <TextBox Margin="5" MinWidth="40" Text="{Binding InputObject}" Foreground="Blue"
                                                 FontSize="24" />
                                    </DataTemplate>
                                    <DataTemplate x:Key="InputTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
                                        <nodify:NodeInput Header="{Binding Title}"
                                                          IsConnected="{Binding IsConnected}"
                                                          Anchor="{Binding Anchor, Mode=OneWayToSource}" />
                                    </DataTemplate>
                                    <plugin:MyDataTemplateSelector x:Key="MyDataTemplateSelector" />
                                </nodify:Node.Resources>
                                <nodify:Node.InputConnectorTemplate>
                                    <DataTemplate>
                                        <!-- Use a ContentControl to display the single element -->
                                        <ContentControl Content="{Binding}">
                                            <!-- Set the ContentTemplateSelector to the data template selector resource -->
                                            <ContentControl.ContentTemplateSelector>
                                                <StaticResource ResourceKey="MyDataTemplateSelector" />
                                            </ContentControl.ContentTemplateSelector>
                                        </ContentControl>
                                    </DataTemplate>
                                </nodify:Node.InputConnectorTemplate>

                                <nodify:Node.OutputConnectorTemplate>
                                    <DataTemplate DataType="{x:Type taskEditor:ConnectorItem}">
                                        <nodify:NodeOutput Header="{Binding Title}"
                                                           IsConnected="{Binding IsConnected}"
                                                           Anchor="{Binding Anchor, Mode=OneWayToSource}" />
                                    </DataTemplate>
                                </nodify:Node.OutputConnectorTemplate>

                            </nodify:Node>
                        </DataTemplate>
                    </nodify:NodifyEditor.ItemTemplate>

                </nodify:NodifyEditor>

            </Grid>
        </Border>
    </Grid>


</ui:FluentWindow>