<ui:FluentWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:nodify="https://miroiu.github.io/nodify"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:taskEditor="clr-namespace:Core.ViewModel.TaskEditor;assembly=Core"
    xmlns:plugin="clr-namespace:Kitopia.View.Pages.Plugin"
    xmlns:taskEditor1="clr-namespace:Kitopia.Converter.TaskEditor"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors" x:Class="Kitopia.View.TaskEditor"
    WindowBackdropType="Acrylic"
    WindowCornerPreference="Round"
    ExtendsContentIntoTitleBar="True"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance {x:Type taskEditor:TaskEditorViewModel}}"
    Title="TaskEditor" Height="450" Width="1800">
    <ui:FluentWindow.Resources>
        <taskEditor1:IfNullVisibilityHidden x:Key="IfNullVisibilityHidden" />
        <taskEditor1:NodeBoderColor x:Key="NodeBoderColor" />
        <DataTemplate x:Key="StringTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:TextBox Margin="10,5,10,5" MinWidth="40" Text="{Binding InputObject}" PlaceholderText="字符串" />
        </DataTemplate>
        <DataTemplate x:Key="IntTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:NumberBox MaxDecimalPlaces="0" Margin="10,5,10,5" MinWidth="40"
                          ValidationMode="InvalidInputOverwritten"
                          Maximum="2147483647" Minimum="-2147483648"
                          Value="{Binding InputObject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          PlaceholderText="整型" />
        </DataTemplate>
        <DataTemplate x:Key="DoubleTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:NumberBox Margin="10,5,10,5" MinWidth="40"
                          ValidationMode="InvalidInputOverwritten"
                          Value="{Binding InputObject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          PlaceholderText="浮点" />
        </DataTemplate>
        <DataTemplate x:Key="BoolTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:ToggleSwitch Margin="10,5,10,5" MinWidth="40" IsChecked="{Binding InputObject}" />
        </DataTemplate>
        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{DynamicResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Viewport="0 0 20 20"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{DynamicResource SmallGridGeometry}" />

        <Storyboard x:Key="显示窗口">

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border"
                                              Storyboard.TargetProperty="(Border.Padding)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0,20,0,0" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.6000000" Value="0,0,0,0" />
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </ui:FluentWindow.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="42" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ui:TitleBar Title="任务编排" Grid.ColumnSpan="2" />
        <ui:Button Visibility="Collapsed" x:Name="add" Content="添加" Command="{Binding AddNodesCommand}" />
        <!-- 左边部分 -->
        <Border x:Name="border" Grid.Row="1" Grid.Column="0" Padding="0,0,0,0">

            <ListBox MouseMove="ListBox_OnMouseMove" ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ScrollViewer.CanContentScroll="False"
                     ItemsSource="{Binding NodeMethods, Mode=OneWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.Resources>

                    <!-- Declare some data templates for different types of data -->
                    <taskEditor1:InterfacesToString x:Key="InterfacesToString" />
                    <DataTemplate x:Key="InputTemplate" DataType="{x:Type taskEditor:ConnectorItem}">

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Border Background="Transparent">
                                <!-- Set the border color to red -->
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.5" />
                                </Border.BorderBrush>
                                <!-- Set the border thickness to 2 -->
                                <Border.BorderThickness>2</Border.BorderThickness>
                                <!-- Set the border corner radius to 10 -->
                                <Border.CornerRadius>10</Border.CornerRadius>
                                <!-- Set the padding to 10 -->
                                <Border.Padding>5</Border.Padding>
                                <!-- Set the margin to 20 -->
                                <Border.Margin>5</Border.Margin>
                            </Border>
                            <!-- Declare a TextBlock element and give it a name -->

                            <TextBlock VerticalAlignment="Center" x:Name="textBlock" FontSize="12"

                                       Text="{Binding TypeName}">
                                <TextBlock.Background>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"
                                                     Opacity="0.6" />
                                </TextBlock.Background>
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" />
                                </TextBlock.Foreground>
                            </TextBlock>


                            <TextBlock VerticalAlignment="Center"
                                       Text="{Binding Title}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                                </TextBlock.Foreground>
                            </TextBlock>
                        </StackPanel>


                    </DataTemplate>
                    <!-- Declare a data template selector and assign it to a resource key -->
                    <plugin:MyDataTemplateSelector x:Key="MyDataTemplateSelector" />

                </ListBox.Resources>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border
                                        x:Name="Border"
                                        Margin="0"
                                        Padding="{TemplateBinding Padding}"
                                        Background="Transparent"
                                        BorderThickness="1"
                                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type taskEditor:PointItem}">
                        <DockPanel Panel.ZIndex="1">
                            <Grid DockPanel.Dock="Top">
                                <Rectangle

                                    Height="20">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                         Opacity="0.5" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Title}" Foreground="White" />
                            </Grid>
                            <Grid>
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}"
                                                         Opacity="0.2" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <DockPanel>
                                    <ItemsControl DockPanel.Dock="Left" ItemsSource="{Binding Input}">
                                        <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <!-- Use a ContentControl to display the single element -->
                                                    <ContentControl Content="{Binding}"
                                                                    ContentTemplateSelector="{StaticResource MyDataTemplateSelector}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>


                                    <ItemsControl DockPanel.Dock="Right" VerticalAlignment="Center"
                                                  ItemsSource="{Binding Output}">
                                        <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical" HorizontalAlignment="Right" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">

                                                    <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                               Text="{Binding Title}">
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                    <TextBlock VerticalAlignment="Center" FontSize="12"

                                                               Text="{Binding TypeName}">
                                                        <TextBlock.Background>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                Opacity="0.6" />

                                                        </TextBlock.Background>
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource ApplicationBackgroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                    <ui:SymbolIcon Symbol="AddCircle20"
                                                                   ToolTip="{Binding Interfaces, Converter={StaticResource InterfacesToString}}"
                                                                   ToolTipService.InitialShowDelay="0"
                                                                   Visibility="{Binding Interfaces, Converter={StaticResource IfNullVisibilityHidden}}" />
                                                    <Border Background="Transparent">
                                                        <!-- Set the border color to red -->
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource SystemAccentColorSecondary}"
                                                                Opacity="0.5" />
                                                        </Border.BorderBrush>
                                                        <!-- Set the border thickness to 2 -->
                                                        <Border.BorderThickness>2</Border.BorderThickness>
                                                        <!-- Set the border corner radius to 10 -->
                                                        <Border.CornerRadius>10</Border.CornerRadius>
                                                        <!-- Set the padding to 10 -->
                                                        <Border.Padding>5</Border.Padding>
                                                        <!-- Set the margin to 20 -->
                                                        <Border.Margin>5</Border.Margin>
                                                    </Border>
                                                    <!-- Declare a TextBlock element and give it a name -->

                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DockPanel>
                            </Grid>


                        </DockPanel>

                    </DataTemplate>
                </ListBox.ItemTemplate>


            </ListBox>


            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded">
                    <b:ControlStoryboardAction Storyboard="{DynamicResource 显示窗口}" ControlStoryboardOption="Play" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </Border>

        <!-- 右边部分 -->
        <Border Grid.Row="1" Grid.Column="1">
            <Grid ShowGridLines="True">
                <Grid Panel.ZIndex="-2">
                    <Grid.Background>
                        <SolidColorBrush Color="{DynamicResource NodifyEditor.BackgroundColor}" Opacity="0.5" />
                    </Grid.Background>
                </Grid>
                <nodify:NodifyEditor x:Name="Editor"
                                     DataContext="{Binding}"
                                     AllowDrop="True"
                                     DragDrop.Drop="NodifyEditor_Drop"
                                     DragDrop.DragOver="NodifyEditor_DragOver"
                                     DragDrop.DragEnter="NodifyEditor_DragEnter"
                                     DragDrop.DragLeave="NodifyEditor_DragLeave"

                                     EnableRealtimeSelection="True"

                                     PendingConnection="{Binding PendingConnection}"
                                     DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                     Connections="{Binding Connections}"
                                     ItemsSource="{Binding Nodes}" >
                    <nodify:NodifyEditor.Background>
                        <DynamicResource ResourceKey="SmallGridLinesDrawingBrush" />
                    </nodify:NodifyEditor.Background>
                    <nodify:NodifyEditor.Resources>
                        <Style TargetType="{x:Type nodify:PendingConnection}"
                               BasedOn="{StaticResource {x:Type nodify:PendingConnection}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type nodify:PendingConnection}">
                                        <Canvas>
                                            <nodify:Connection Source="{TemplateBinding SourceAnchor}"
                                                               Target="{TemplateBinding TargetAnchor}"
                                                               Direction="{TemplateBinding Direction}"
                                                               StrokeThickness="{TemplateBinding StrokeThickness}"

                                                               TargetOffsetMode="None">

                                                <nodify:Connection.Style>
                                                    <Style TargetType="{x:Type nodify:Connection}"
                                                           BasedOn="{StaticResource {x:Type nodify:Connection}}">
                                                        <Setter Property="Stroke"
                                                                Value="{DynamicResource Connection.StrokeBrush}" />
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource Connection.StrokeBrush}" />

                                                    </Style>
                                                </nodify:Connection.Style>
                                                <nodify:Connection.Stroke>
                                                    <SolidColorBrush
                                                        Color="{DynamicResource SystemAccentColorSecondary}"
                                                        Opacity="0.5" />
                                                </nodify:Connection.Stroke>
                                            </nodify:Connection>
                                            <Border Background="{TemplateBinding Background}"
                                                    Canvas.Left="{Binding TargetAnchor.X, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Canvas.Top="{Binding TargetAnchor.Y, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="Visible"
                                                    Padding="{TemplateBinding Padding}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    CornerRadius="3"
                                                    Margin="15">

                                                <ContentPresenter />
                                            </Border>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </nodify:NodifyEditor.Resources>


                    <nodify:NodifyEditor.Foreground>
                        <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" Opacity="0.7" />
                    </nodify:NodifyEditor.Foreground>
                    <nodify:NodifyEditor.ItemContainerStyle>
                        <Style TargetType="{x:Type nodify:ItemContainer}">

                            <Setter Property="Location"
                                    Value="{Binding Location, Mode=TwoWay}" />
                        </Style>
                    </nodify:NodifyEditor.ItemContainerStyle>


                    <nodify:NodifyEditor.ConnectionTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:ConnectionItem}">
                            <nodify:Connection Source="{Binding Source.Anchor}"
                                               Target="{Binding Target.Anchor}">
                                <nodify:Connection.Stroke>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.5" />
                                </nodify:Connection.Stroke>
                            </nodify:Connection>
                        </DataTemplate>
                    </nodify:NodifyEditor.ConnectionTemplate>

                    <nodify:NodifyEditor.PendingConnectionTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:PendingConnectionViewModel}">
                            <nodify:PendingConnection StartedCommand="{Binding StartCommand}"
                                                      CompletedCommand="{Binding FinishCommand}"
                                                      EnablePreview="True"
                                                      EnableSnapping="True"
                                                      Target="{Binding PreviewTarget, Mode=OneWayToSource}"
                                                      PreviewTarget="{Binding PreviewTarget, Mode=OneWayToSource}">
                                <nodify:PendingConnection.Stroke>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.5" />
                                </nodify:PendingConnection.Stroke>
                                <nodify:PendingConnection.Background>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.8" />
                                </nodify:PendingConnection.Background>
                                <TextBlock Text="{Binding PreviewText}" />
                            </nodify:PendingConnection>

                        </DataTemplate>
                    </nodify:NodifyEditor.PendingConnectionTemplate>
                    <nodify:NodifyEditor.ItemTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:PointItem}">
                            <nodify:Node
                                x:Name="Node"
                                Input="{Binding Input}"
                                VerticalAlignment="Center"
                                
                                Output="{Binding Output}">
                                <nodify:Node.Resources>
                                    
                                    <taskEditor1:InterfacesToString x:Key="InterfacesToString" />
                                    <DataTemplate x:Key="InputTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
                                        <nodify:NodeInput

                                            IsConnected="{Binding IsConnected}"
                                            Anchor="{Binding Anchor, Mode=OneWayToSource}">
                                            <nodify:NodeInput.Header>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">


                                                    <TextBlock VerticalAlignment="Center" FontSize="12"
                                                               Text="{Binding TypeName}">
                                                        <TextBlock.Background>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                Opacity="0.6" />
                                                        </TextBlock.Background>
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource ApplicationBackgroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                    <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                               Text="{Binding Title}" />
                                                </StackPanel>
                                            </nodify:NodeInput.Header>
                                            <nodify:NodeInput.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                                 Opacity="0.5" />
                                            </nodify:NodeInput.BorderBrush>
                                        </nodify:NodeInput>

                                    </DataTemplate>
                                    <plugin:MyDataTemplateSelector x:Key="MyDataTemplateSelector" />
                                </nodify:Node.Resources>
                                
                                <nodify:Node.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" />
                                </nodify:Node.Foreground>
                                <nodify:Node.HeaderBrush>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.5" />
                                </nodify:Node.HeaderBrush>
                                <nodify:Node.Header>
                                    <TextBlock Text="{Binding Title}" Foreground="White" HorizontalAlignment="Center" />
                                </nodify:Node.Header>
                                <nodify:Node.InputConnectorTemplate>
                                    <DataTemplate>
                                        <!-- Use a ContentControl to display the single element -->
                                        <ContentControl Content="{Binding}" VerticalAlignment="Center"
                                                        ContentTemplateSelector="{StaticResource MyDataTemplateSelector}" />
                                    </DataTemplate>
                                </nodify:Node.InputConnectorTemplate>

                                <nodify:Node.OutputConnectorTemplate>
                                    <DataTemplate DataType="{x:Type taskEditor:ConnectorItem}">
                                        <nodify:NodeOutput
                                            VerticalAlignment="Center"
                                            IsConnected="{Binding IsConnected}"
                                            Anchor="{Binding Anchor, Mode=OneWayToSource}">
                                            <nodify:NodeOutput.Header>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">

                                                    <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                               Text="{Binding Title}" />
                                                    <TextBlock VerticalAlignment="Center" FontSize="12"
                                                               Text="{Binding TypeName}">
                                                        <TextBlock.Background>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                Opacity="0.6" />
                                                        </TextBlock.Background>
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource ApplicationBackgroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                    <ui:SymbolIcon Symbol="AddCircle20"
                                                                   ToolTip="{Binding Interfaces, Converter={StaticResource InterfacesToString}}"
                                                                   ToolTipService.InitialShowDelay="0"
                                                                   Visibility="{Binding Interfaces, Converter={StaticResource IfNullVisibilityHidden}}" />
                                                </StackPanel>
                                            </nodify:NodeOutput.Header>
                                            <nodify:NodeOutput.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                                 Opacity="0.5" />
                                            </nodify:NodeOutput.BorderBrush>
                                        </nodify:NodeOutput>
                                    </DataTemplate>
                                </nodify:Node.OutputConnectorTemplate>

                            </nodify:Node>
                        </DataTemplate>
                    </nodify:NodifyEditor.ItemTemplate>

                </nodify:NodifyEditor>

            </Grid>
        </Border>
        <Grid Grid.Row="1" Grid.Column="1"
              Panel.ZIndex="10">
            <Border

                Padding="12"
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                BorderThickness="1"
                CornerRadius="4">

                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="30"
                        Direction="0"
                        Opacity="0.4"
                        ShadowDepth="0"
                        Color="#202020" />
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <ui:Button FontSize="25" ToolTip="运行测试" Command="{Binding VerifyNodeCommand}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Play20" />
                        </ui:Button.Icon>

                    </ui:Button>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>


</ui:FluentWindow>