<ui:FluentWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:nodify="https://miroiu.github.io/nodify"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:taskEditor="clr-namespace:Core.ViewModel.TaskEditor;assembly=Core"
    xmlns:plugin="clr-namespace:Kitopia.View.Pages.Plugin"
    xmlns:taskEditor1="clr-namespace:Kitopia.Converter.TaskEditor"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:controls="clr-namespace:Kitopia.Controls"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter"
    x:Class="Kitopia.View.TaskEditor"
    WindowBackdropType="Acrylic"
    WindowCornerPreference="Round"
    ExtendsContentIntoTitleBar="True"
    mc:Ignorable="d"
    d:DesignHeight="1800"
    d:DataContext="{d:DesignInstance {x:Type taskEditor:TaskEditorViewModel}}"
    Title="TaskEditor" Height="450" Width="1800">
    <ui:FluentWindow.Resources>
        <taskEditor1:IfNullVisibilityHidden x:Key="IfNullVisibilityHidden" />
        <DataTemplate x:Key="StringTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:TextBox Margin="10,5,10,5" MinWidth="40" Text="{Binding InputObject}" PlaceholderText="字符串" />
        </DataTemplate>
        <DataTemplate x:Key="IntTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:NumberBox MaxDecimalPlaces="0" Margin="10,5,10,5" MinWidth="40"
                          ValidationMode="InvalidInputOverwritten"
                          Maximum="2147483647" Minimum="-2147483648"
                          Value="{Binding InputObject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          PlaceholderText="整型" />
        </DataTemplate>
        <DataTemplate x:Key="DoubleTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:NumberBox Margin="10,5,10,5" MinWidth="40"
                          ValidationMode="InvalidInputOverwritten"
                          Value="{Binding InputObject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          PlaceholderText="浮点" />
        </DataTemplate>
        <DataTemplate x:Key="BoolTemplate" DataType="{x:Type taskEditor:ConnectorItem}">
            <ui:ToggleSwitch Margin="10,5,10,5" MinWidth="40" IsChecked="{Binding InputObject}" />
        </DataTemplate>
        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{DynamicResource NodifyEditor.SelectionRectangleBackgroundBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="Tile"
                      ViewportUnits="Absolute"
                      Viewport="0 0 20 20"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{DynamicResource SmallGridGeometry}" />

        <Storyboard x:Key="显示窗口">

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border"
                                              Storyboard.TargetProperty="(Border.Padding)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0,20,0,0" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.6000000" Value="0,0,0,0" />
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </ui:FluentWindow.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding ReloadScenarioCommand}" PassEventArgsToCommand="True" />
        </b:EventTrigger>
        <b:EventTrigger EventName="DataContextChanged">
            <b:InvokeCommandAction Command="{Binding LoadCommand}"
                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
        </b:EventTrigger>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadCommand}"
                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="10*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="42" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ContentPresenter Panel.ZIndex="100" Grid.Column="1" Grid.RowSpan="2" x:Name="ContentPresenter" />


        <ui:TitleBar Title="任务编排" Grid.ColumnSpan="2" />
        <ui:Button Visibility="Collapsed" x:Name="add" Content="添加" Command="{Binding AddNodesCommand}" />
        <!-- 左边部分 -->
        <Border x:Name="border" Grid.Row="1" Grid.Column="0" Padding="0,0,0,0">
            <ScrollViewer>
                <ListBox x:Name="ListBox" PreviewMouseWheel="ListBox_PreviewMouseWheel">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border
                                            x:Name="Border"
                                            Margin="0"
                                            Padding="{TemplateBinding Padding}"
                                            Background="Transparent"
                                            BorderThickness="1"
                                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <Expander Header="情景信息" FontSize="15" IsExpanded="True" FontWeight="Medium">
                        <Expander.Content>

                            <StackPanel>
                                <controls:SettingItems Margin="0" Title="情景名称" FontSize="20">
                                    <TextBox
                                        Text="{Binding Scenario.Name,UpdateSourceTrigger=PropertyChanged,NotifyOnTargetUpdated=True,NotifyOnSourceUpdated=True}" />
                                    <controls:SettingItems.Icon>
                                        <ui:SymbolIcon Symbol="PaintBrush20" FontSize="25" />
                                    </controls:SettingItems.Icon>
                                </controls:SettingItems>
                                <controls:SettingItems Margin="0" Title="情景描述" FontSize="20">
                                    <TextBox TextWrapping="Wrap"
                                             Text="{Binding Scenario.Description,UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:SettingItems.Icon>
                                        <ui:SymbolIcon Symbol="PaintBrush20" FontSize="25" />
                                    </controls:SettingItems.Icon>
                                </controls:SettingItems>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>
                    <Expander Header="触发条件" FontSize="15" IsExpanded="True" FontWeight="Medium">
                        <Expander.Content>

                            <StackPanel>
                                <Expander x:Name="CardExpander" IsExpanded="True"
                                          IsEnabled="{Binding Scenario.ExecutionManual,Mode=OneWay}"
                                          Padding="0,0,10,0">
                                    <Expander.Header>
                                        <controls:SettingItems Margin="0" Title="手动触发" FontSize="20"
                                                               BorderThickness="0">
                                            <controls:ResetIsEnabled>
                                                <ui:ToggleSwitch
                                                    IsChecked="{Binding Scenario.ExecutionManual,Mode=TwoWay}">
                                                    <b:Interaction.Triggers>
                                                        <b:DataTrigger
                                                            Binding="{Binding ElementName=CardExpander,Path=IsEnabled}"
                                                            Value="False">
                                                            <b:ChangePropertyAction
                                                                TargetObject="{Binding ElementName=CardExpander}"
                                                                PropertyName="IsExpanded" Value="False" />
                                                        </b:DataTrigger>
                                                    </b:Interaction.Triggers>
                                                </ui:ToggleSwitch>
                                            </controls:ResetIsEnabled>

                                            <controls:SettingItems.Icon>
                                                <ui:SymbolIcon Symbol="PaintBrush20" FontSize="25" />
                                            </controls:SettingItems.Icon>


                                        </controls:SettingItems>
                                    </Expander.Header>
                                    <StackPanel>
                                        <controls:SettingItems Margin="0" Title="关键词" FontSize="20"
                                                               BorderThickness="0">
                                            <controls:SettingItems.Icon>
                                                <ui:SymbolIcon Symbol="PaintBrush20" FontSize="25" />
                                            </controls:SettingItems.Icon>
                                        </controls:SettingItems>
                                        <Grid ColumnSpan="10" RowSpan="5" Margin="10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="36" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="70" />
                                            </Grid.RowDefinitions>
                                            <ListBox Margin="0,0,10,0" x:Name="keys" SelectedIndex="{Binding IsSelected}"
                                                     ItemsSource="{Binding Scenario.Keys}" />


                                            <ui:Button Command="{Binding DelKeyCommand}"
                                                       CommandParameter="{Binding ElementName=keys,Path=SelectedValue}"
                                                       Grid.Row="0" Grid.Column="1" Height="36" Width="36">
                                                <ui:Button.Icon>
                                                    <ui:SymbolIcon Symbol="Subtract12" Foreground="OrangeRed"
                                                                   FontSize="25" />
                                                </ui:Button.Icon>
                                            </ui:Button>
                                            <ui:Button Command="{Binding AddKeyCommand}"
                                                       CommandParameter="{Binding KeyValue}" Grid.Row="1"
                                                       Grid.Column="1" Height="36" Width="36">
                                                <ui:Button.Icon>
                                                    <ui:SymbolIcon Symbol="Add12" Foreground="GreenYellow"
                                                                   FontSize="25" />
                                                </ui:Button.Icon>
                                            </ui:Button>
                                            <DockPanel Grid.Row="1" Grid.Column="0" Margin="10" Height="40">
                                                <ui:TextBox 
                                                            Text="{Binding KeyValue,UpdateSourceTrigger=PropertyChanged}"
                                                             />
                                            </DockPanel>
                                        </Grid>

                                    </StackPanel>

                                </Expander>
                                <Expander x:Name="CardExpander4" IsExpanded="True"
                                          IsEnabled="{Binding Scenario.ExecutionManual,Mode=OneWay}"
                                          Padding="0,0,10,0">
                                    <Expander.Header>
                                        <controls:SettingItems Margin="0" Title="自动触发" FontSize="20"
                                                               BorderThickness="0">
                                            <controls:ResetIsEnabled>
                                                <ui:ToggleSwitch
                                                    IsChecked="{Binding Scenario.ExecutionAuto,Mode=TwoWay}">
                                                    <b:Interaction.Triggers>
                                                        <b:DataTrigger
                                                            Binding="{Binding ElementName=CardExpander4,Path=IsEnabled}"
                                                            Value="False">
                                                            <b:ChangePropertyAction
                                                                TargetObject="{Binding ElementName=CardExpander4}"
                                                                PropertyName="IsExpanded" Value="False" />
                                                        </b:DataTrigger>
                                                    </b:Interaction.Triggers>
                                                </ui:ToggleSwitch>
                                            </controls:ResetIsEnabled>

                                            <controls:SettingItems.Icon>
                                                <ui:SymbolIcon Symbol="PaintBrush20" FontSize="25" />
                                            </controls:SettingItems.Icon>


                                        </controls:SettingItems>
                                    </Expander.Header>
                                    <StackPanel  Margin="15,5,5,5" Orientation="Vertical">
                                        <StackPanel  VerticalAlignment="Center" Orientation="Horizontal">
                                            <CheckBox />
                                            <ui:TextBlock VerticalAlignment="Center" Text="Kitopia启动时运行" />
                                        </StackPanel>
                                        <StackPanel  VerticalAlignment="Center" Orientation="Horizontal">
                                            <CheckBox />
                                            <ui:TextBlock VerticalAlignment="Center" Text="关机时运行" />
                                        </StackPanel>
                                        <StackPanel  VerticalAlignment="Center" Orientation="Horizontal">
                                            <CheckBox />
                                            <ui:TextBlock VerticalAlignment="Center" Text="启动时运行" />
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                                <Expander x:Name="CardExpander2"
                                          IsEnabled="{Binding Scenario.ExecutionIntervalSpecifies,Mode=OneWay}"
                                          Padding="0,0,10,0">
                                    <Expander.Header>
                                        <controls:SettingItems Margin="0" Title="周期性触发" FontSize="20"
                                                               BorderThickness="0">
                                            <controls:ResetIsEnabled>
                                                <ui:ToggleSwitch
                                                    IsChecked="{Binding Scenario.ExecutionIntervalSpecifies,Mode=TwoWay}">
                                                    <b:Interaction.Triggers>
                                                        <b:DataTrigger
                                                            Binding="{Binding ElementName=CardExpander2,Path=IsEnabled}"
                                                            Value="False">
                                                            <b:ChangePropertyAction
                                                                TargetObject="{Binding ElementName=CardExpander2}"
                                                                PropertyName="IsExpanded" Value="False" />
                                                        </b:DataTrigger>
                                                    </b:Interaction.Triggers>
                                                </ui:ToggleSwitch>
                                            </controls:ResetIsEnabled>

                                            <controls:SettingItems.Icon>
                                                <ui:SymbolIcon Symbol="PaintBrush20" FontSize="25" />
                                            </controls:SettingItems.Icon>
                                        </controls:SettingItems>
                                    </Expander.Header>
                                    <ListBox>
                                        <ListBoxItem>dds</ListBoxItem>
                                    </ListBox>
                                </Expander>
                                <Expander x:Name="CardExpander3"
                                          IsEnabled="{Binding Scenario.ExecutionScheduleTime,Mode=OneWay}"
                                          Padding="0,0,10,0">
                                    <Expander.Header>
                                        <controls:SettingItems Margin="0" Title="定时触发" FontSize="20"
                                                               BorderThickness="0">
                                            <controls:ResetIsEnabled>
                                                <ui:ToggleSwitch
                                                    IsChecked="{Binding Scenario.ExecutionScheduleTime,Mode=TwoWay}">
                                                    <b:Interaction.Triggers>
                                                        <b:DataTrigger
                                                            Binding="{Binding ElementName=CardExpander3,Path=IsEnabled}"
                                                            Value="False">
                                                            <b:ChangePropertyAction
                                                                TargetObject="{Binding ElementName=CardExpander3}"
                                                                PropertyName="IsExpanded" Value="False" />
                                                        </b:DataTrigger>
                                                    </b:Interaction.Triggers>
                                                </ui:ToggleSwitch>
                                            </controls:ResetIsEnabled>

                                            <controls:SettingItems.Icon>
                                                <ui:SymbolIcon Symbol="PaintBrush20" FontSize="25" />
                                            </controls:SettingItems.Icon>
                                        </controls:SettingItems>
                                    </Expander.Header>
                                    <ListBox>
                                        <ListBoxItem>dds</ListBoxItem>
                                    </ListBox>
                                </Expander>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>
                    <ListBox MouseMove="ListBox_OnMouseMove" Padding="0" Margin="0"
                             PreviewMouseWheel="ListBox_PreviewMouseWheel"
                             ItemsSource="{Binding NodeMethods, Mode=OneWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border
                                                x:Name="Border"
                                                Margin="0"
                                                Padding="0"
                                                Background="Transparent"
                                                BorderThickness="1"
                                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type componentModel:BindingList`1}">
                                <Expander Header="{Binding [0].Plugin}" Margin="0">
                                    <ListBox MouseMove="ListBox_OnMouseMove" Margin="0"
                                             PreviewMouseWheel="ListBox_PreviewMouseWheel"
                                             ItemsSource="{Binding }">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}"
                                                   BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border
                                                                x:Name="Border"
                                                                Margin="0"
                                                                Padding="{TemplateBinding Padding}"
                                                                Background="Transparent"
                                                                BorderThickness="1"
                                                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                                                                <ContentPresenter />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.Resources>

                                            <!-- Declare some data templates for different types of data -->
                                            <taskEditor1:InterfacesToString x:Key="InterfacesToString" />
                                            <DataTemplate x:Key="InputTemplate"
                                                          DataType="{x:Type taskEditor:ConnectorItem}">

                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Border Background="Transparent">
                                                        <!-- Set the border color to red -->
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource SystemAccentColorSecondary}"
                                                                Opacity="0.5" />
                                                        </Border.BorderBrush>
                                                        <!-- Set the border thickness to 2 -->
                                                        <Border.BorderThickness>2</Border.BorderThickness>
                                                        <!-- Set the border corner radius to 10 -->
                                                        <Border.CornerRadius>10</Border.CornerRadius>
                                                        <!-- Set the padding to 10 -->
                                                        <Border.Padding>5</Border.Padding>
                                                        <!-- Set the margin to 20 -->
                                                        <Border.Margin>5</Border.Margin>
                                                    </Border>
                                                    <!-- Declare a TextBlock element and give it a name -->

                                                    <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                               FontSize="12"

                                                               Text="{Binding TypeName}">
                                                        <TextBlock.Background>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                Opacity="0.6" />
                                                        </TextBlock.Background>
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource ApplicationBackgroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>


                                                    <TextBlock VerticalAlignment="Center"
                                                               Text="{Binding Title}">
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                </StackPanel>


                                            </DataTemplate>
                                            <!-- Declare a data template selector and assign it to a resource key -->
                                            <plugin:MyDataTemplateSelector x:Key="MyDataTemplateSelector" />

                                        </ListBox.Resources>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type taskEditor:PointItem}">
                                                <DockPanel Panel.ZIndex="1">
                                                    <Grid DockPanel.Dock="Top">
                                                        <Rectangle

                                                            Height="20">
                                                            <Rectangle.Fill>
                                                                <SolidColorBrush
                                                                    Color="{DynamicResource SystemAccentColorSecondary}"
                                                                    Opacity="0.5" />
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Title}"
                                                                   Foreground="White" />
                                                    </Grid>
                                                    <Grid>
                                                        <Rectangle>
                                                            <Rectangle.Fill>
                                                                <SolidColorBrush
                                                                    Color="{DynamicResource ApplicationBackgroundColor}"
                                                                    Opacity="0.2" />
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <DockPanel>
                                                            <ItemsControl DockPanel.Dock="Left"
                                                                          ItemsSource="{Binding Input}">
                                                                <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Vertical"
                                                                            VerticalAlignment="Center" />
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                                <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <Grid>
                                                                            <!-- Use a ContentControl to display the single element -->
                                                                            <ContentControl Content="{Binding}"
                                                                                ContentTemplateSelector="{StaticResource MyDataTemplateSelector}" />
                                                                        </Grid>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>


                                                            <ItemsControl DockPanel.Dock="Right"
                                                                          VerticalAlignment="Center"
                                                                          ItemsSource="{Binding Output}">
                                                                <!-- Set the ItemsPanel to a StackPanel with horizontal orientation -->
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Vertical"
                                                                            HorizontalAlignment="Right" />
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                                <!-- Set the ItemTemplate to a Button with the content bound to the item -->
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel Orientation="Horizontal"
                                                                            VerticalAlignment="Center"
                                                                            HorizontalAlignment="Right">

                                                                            <TextBlock VerticalAlignment="Center"
                                                                                x:Name="textBlock"
                                                                                Text="{Binding Title}">
                                                                                <TextBlock.Foreground>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorPrimary}" />
                                                                                </TextBlock.Foreground>
                                                                            </TextBlock>
                                                                            <TextBlock VerticalAlignment="Center"
                                                                                FontSize="12"

                                                                                Text="{Binding TypeName}">
                                                                                <TextBlock.Background>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource TextFillColorPrimary}"
                                                                                        Opacity="0.6" />

                                                                                </TextBlock.Background>
                                                                                <TextBlock.Foreground>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource ApplicationBackgroundColor}" />
                                                                                </TextBlock.Foreground>
                                                                            </TextBlock>
                                                                            <ui:SymbolIcon Symbol="AddCircle20"
                                                                                ToolTip="{Binding Interfaces, Converter={StaticResource InterfacesToString}}"
                                                                                ToolTipService.InitialShowDelay="0"
                                                                                Visibility="{Binding Interfaces, Converter={StaticResource IfNullVisibilityHidden}}" />
                                                                            <Border Background="Transparent">
                                                                                <!-- Set the border color to red -->
                                                                                <Border.BorderBrush>
                                                                                    <SolidColorBrush
                                                                                        Color="{DynamicResource SystemAccentColorSecondary}"
                                                                                        Opacity="0.5" />
                                                                                </Border.BorderBrush>
                                                                                <!-- Set the border thickness to 2 -->
                                                                                <Border.BorderThickness>2</Border.BorderThickness>
                                                                                <!-- Set the border corner radius to 10 -->
                                                                                <Border.CornerRadius>10</Border.CornerRadius>
                                                                                <!-- Set the padding to 10 -->
                                                                                <Border.Padding>5</Border.Padding>
                                                                                <!-- Set the margin to 20 -->
                                                                                <Border.Margin>5</Border.Margin>
                                                                            </Border>
                                                                            <!-- Declare a TextBlock element and give it a name -->

                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </DockPanel>
                                                    </Grid>


                                                </DockPanel>

                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Expander>

                            </DataTemplate>

                        </ListBox.ItemTemplate>


                    </ListBox>
                </ListBox>
            </ScrollViewer>

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded">
                    <b:ControlStoryboardAction Storyboard="{DynamicResource 显示窗口}" ControlStoryboardOption="Play" />
                </b:EventTrigger>

            </b:Interaction.Triggers>
        </Border>

        <!-- 右边部分 -->
        <Border Grid.Row="1" Grid.Column="1">
            <Grid ShowGridLines="True">
                <Grid Panel.ZIndex="-2">
                    <Grid.Background>
                        <SolidColorBrush Color="{DynamicResource NodifyEditor.BackgroundColor}" Opacity="0.5" />
                    </Grid.Background>
                </Grid>
                <nodify:NodifyEditor x:Name="Editor"
                                     d:DataContext="{}"
                                     DataContext="{Binding}"
                                     AllowDrop="True"
                                     DragDrop.Drop="NodifyEditor_Drop"
                                     DragDrop.DragOver="NodifyEditor_DragOver"
                                     DragDrop.DragEnter="NodifyEditor_DragEnter"
                                     DragDrop.DragLeave="NodifyEditor_DragLeave"

                                     EnableRealtimeSelection="True"

                                     PendingConnection="{Binding PendingConnection}"
                                     DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                     Connections="{Binding Scenario.connections}"
                                     ItemsSource="{Binding Scenario.nodes}">
                    <nodify:NodifyEditor.Background>
                        <DynamicResource ResourceKey="SmallGridLinesDrawingBrush" />
                    </nodify:NodifyEditor.Background>
                    <nodify:NodifyEditor.Resources>
                        <Style TargetType="{x:Type nodify:PendingConnection}"
                               BasedOn="{StaticResource {x:Type nodify:PendingConnection}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type nodify:PendingConnection}">
                                        <Canvas>
                                            <nodify:Connection Source="{TemplateBinding SourceAnchor}"
                                                               Target="{TemplateBinding TargetAnchor}"
                                                               Direction="{TemplateBinding Direction}"
                                                               StrokeThickness="{TemplateBinding StrokeThickness}"

                                                               TargetOffsetMode="None">

                                                <nodify:Connection.Style>
                                                    <Style TargetType="{x:Type nodify:Connection}"
                                                           BasedOn="{StaticResource {x:Type nodify:Connection}}">
                                                        <Setter Property="Stroke"
                                                                Value="{DynamicResource Connection.StrokeBrush}" />
                                                        <Setter Property="Fill"
                                                                Value="{DynamicResource Connection.StrokeBrush}" />

                                                    </Style>
                                                </nodify:Connection.Style>
                                                <nodify:Connection.Stroke>
                                                    <SolidColorBrush
                                                        Color="{DynamicResource SystemAccentColorSecondary}"
                                                        Opacity="0.5" />
                                                </nodify:Connection.Stroke>
                                            </nodify:Connection>
                                            <Border Background="{TemplateBinding Background}"
                                                    Canvas.Left="{Binding TargetAnchor.X, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Canvas.Top="{Binding TargetAnchor.Y, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="Visible"
                                                    Padding="{TemplateBinding Padding}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    CornerRadius="3"
                                                    Margin="15">

                                                <ContentPresenter />
                                            </Border>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </nodify:NodifyEditor.Resources>


                    <nodify:NodifyEditor.Foreground>
                        <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" Opacity="0.7" />
                    </nodify:NodifyEditor.Foreground>
                    <nodify:NodifyEditor.ItemContainerStyle>
                        <Style d:DataContext="{d:DesignInstance taskEditor:PointItem}"
                               TargetType="{x:Type nodify:ItemContainer}"
                               BasedOn="{StaticResource {x:Type nodify:ItemContainer}}">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="SelectedBorderThickness" Value="3" />
                            <Setter Property="Location"
                                    Value="{Binding Location, Mode=TwoWay}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}"
                                             Value="1">
                                    <Setter Property="BorderBrush"
                                            Value="GreenYellow" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}"
                                             Value="2">
                                    <Setter Property="BorderBrush"
                                            Value="OrangeRed" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}"
                                             Value="3">
                                    <Setter Property="BorderBrush"
                                            Value="Yellow" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}"
                                             Value="0">
                                    <Setter Property="BorderBrush"
                                            Value="LightGray" />

                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </nodify:NodifyEditor.ItemContainerStyle>


                    <nodify:NodifyEditor.ConnectionTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:ConnectionItem}">
                            <nodify:Connection Source="{Binding Source.Anchor}"
                                               Target="{Binding Target.Anchor}">
                                <nodify:Connection.Stroke>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.5" />
                                </nodify:Connection.Stroke>
                            </nodify:Connection>
                        </DataTemplate>
                    </nodify:NodifyEditor.ConnectionTemplate>

                    <nodify:NodifyEditor.PendingConnectionTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:PendingConnectionViewModel}">
                            <nodify:PendingConnection StartedCommand="{Binding StartCommand}"
                                                      CompletedCommand="{Binding FinishCommand}"
                                                      EnablePreview="True"
                                                      EnableSnapping="True"
                                                      Target="{Binding PreviewTarget, Mode=OneWayToSource}"
                                                      PreviewTarget="{Binding PreviewTarget, Mode=OneWayToSource}">
                                <nodify:PendingConnection.Stroke>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.5" />
                                </nodify:PendingConnection.Stroke>
                                <nodify:PendingConnection.Background>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.8" />
                                </nodify:PendingConnection.Background>
                                <TextBlock Text="{Binding PreviewText}" />
                            </nodify:PendingConnection>

                        </DataTemplate>
                    </nodify:NodifyEditor.PendingConnectionTemplate>
                    <nodify:NodifyEditor.ItemTemplate>
                        <DataTemplate DataType="{x:Type taskEditor:PointItem}">
                            <nodify:Node
                                x:Name="Node"
                                Input="{Binding Input}"
                                VerticalAlignment="Center"
                                Output="{Binding Output}">
                                <nodify:Node.Resources>

                                    <taskEditor1:InterfacesToString x:Key="InterfacesToString" />
                                    <DataTemplate x:Key="InputTemplate"
                                                  DataType="{x:Type taskEditor:ConnectorItem}">
                                        <nodify:NodeInput
                                            ToolTip="{Binding InputObject}"
                                            ToolTipService.InitialShowDelay="0"
                                            IsConnected="{Binding IsConnected}"
                                            Anchor="{Binding Anchor, Mode=OneWayToSource}">

                                            <nodify:NodeInput.Header>

                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">
                                                    <TextBlock VerticalAlignment="Center" FontSize="12"
                                                               Text="{Binding TypeName}">
                                                        <TextBlock.Resources>
                                                            <Style BasedOn="{StaticResource {x:Type TextBlock}}"
                                                                   TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding  IsNotUsed}"
                                                                        Value="True">
                                                                        <Setter Property="Background">
                                                                            <Setter.Value>
                                                                                <SolidColorBrush
                                                                                    Color="{DynamicResource ControlFillColorDisabled}"
                                                                                    Opacity="0.6" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="Foreground">
                                                                            <Setter.Value>
                                                                                <SolidColorBrush
                                                                                    Color="{DynamicResource TextFillColorTertiary}" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding  IsNotUsed}"
                                                                        Value="False">
                                                                        <Setter Property="Background">
                                                                            <Setter.Value>
                                                                                <SolidColorBrush
                                                                                    Color="{DynamicResource TextFillColorPrimary}"
                                                                                    Opacity="0.6" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="Foreground">
                                                                            <Setter.Value>
                                                                                <SolidColorBrush
                                                                                    Color="{DynamicResource ApplicationBackgroundColor}" />
                                                                            </Setter.Value>
                                                                        </Setter>


                                                                    </DataTrigger>
                                                                </Style.Triggers>

                                                            </Style>
                                                        </TextBlock.Resources>

                                                    </TextBlock>
                                                    <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                               Text="{Binding Title}">
                                                        <TextBlock.Resources>
                                                            <Style BasedOn="{StaticResource {x:Type TextBlock}}"
                                                                   TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding  IsNotUsed}"
                                                                        Value="True">
                                                                        <Setter Property="Foreground">
                                                                            <Setter.Value>
                                                                                <SolidColorBrush
                                                                                    Color="{DynamicResource TextFillColorTertiary}" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>

                                                            </Style>
                                                        </TextBlock.Resources>
                                                    </TextBlock>
                                                </StackPanel>
                                            </nodify:NodeInput.Header>
                                            <nodify:NodeInput.BorderBrush>
                                                <SolidColorBrush
                                                    Color="{DynamicResource SystemAccentColorSecondary}"
                                                    Opacity="0.5" />
                                            </nodify:NodeInput.BorderBrush>
                                        </nodify:NodeInput>

                                    </DataTemplate>
                                    <plugin:MyDataTemplateSelector x:Key="MyDataTemplateSelector" />
                                </nodify:Node.Resources>

                                <nodify:Node.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" />
                                </nodify:Node.Foreground>
                                <nodify:Node.HeaderBrush>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}"
                                                     Opacity="0.5" />
                                </nodify:Node.HeaderBrush>
                                <nodify:Node.Header>
                                    <TextBlock Text="{Binding Title}" Foreground="White"
                                               HorizontalAlignment="Center" />
                                </nodify:Node.Header>
                                <nodify:Node.InputConnectorTemplate>
                                    <DataTemplate>
                                        <!-- Use a ContentControl to display the single element -->
                                        <ContentControl Content="{Binding}" VerticalAlignment="Center"
                                                        ContentTemplateSelector="{StaticResource MyDataTemplateSelector}" />
                                    </DataTemplate>
                                </nodify:Node.InputConnectorTemplate>

                                <nodify:Node.OutputConnectorTemplate>
                                    <DataTemplate DataType="{x:Type taskEditor:ConnectorItem}">
                                        <nodify:NodeOutput
                                            x:Name="NodeOutput"
                                            ToolTip="{Binding InputObject}"
                                            ToolTipService.InitialShowDelay="0"
                                            VerticalAlignment="Center"
                                            IsConnected="{Binding IsConnected}"
                                            Anchor="{Binding Anchor, Mode=OneWayToSource}">
                                            <nodify:NodeOutput.Header>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                                            HorizontalAlignment="Right">

                                                    <TextBlock VerticalAlignment="Center" x:Name="textBlock"
                                                               Text="{Binding Title}" />
                                                    <TextBlock VerticalAlignment="Center" FontSize="12"
                                                               Text="{Binding TypeName}">
                                                        <TextBlock.Background>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource TextFillColorPrimary}"
                                                                Opacity="0.6" />
                                                        </TextBlock.Background>
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush
                                                                Color="{DynamicResource ApplicationBackgroundColor}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                    <ui:SymbolIcon Symbol="AddCircle20"
                                                                   ToolTip="{Binding Interfaces, Converter={StaticResource InterfacesToString}}"
                                                                   ToolTipService.InitialShowDelay="0"
                                                                   Visibility="{Binding Interfaces, Converter={StaticResource IfNullVisibilityHidden}}" />
                                                </StackPanel>
                                            </nodify:NodeOutput.Header>
                                            <nodify:NodeOutput.BorderBrush>
                                                <SolidColorBrush
                                                    Color="{DynamicResource SystemAccentColorSecondary}"
                                                    Opacity="0.5" />
                                            </nodify:NodeOutput.BorderBrush>
                                        </nodify:NodeOutput>
                                    </DataTemplate>
                                </nodify:Node.OutputConnectorTemplate>

                            </nodify:Node>
                        </DataTemplate>
                    </nodify:NodifyEditor.ItemTemplate>

                </nodify:NodifyEditor>

            </Grid>
        </Border>
        <Grid Grid.Row="1" Grid.Column="1"
              Panel.ZIndex="10">
            <Border

                Padding="12"
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                BorderThickness="1"
                CornerRadius="4">

                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="30"
                        Direction="0"
                        Opacity="0.4"
                        ShadowDepth="0"
                        Color="#202020" />
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <ui:Button FontSize="25" ToolTip="清理未连接节点" ToolTipService.InitialShowDelay="100"
                               Command="{Binding CleanUnusedNodeCommand}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Delete20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button FontSize="25" ToolTip="运行测试" ToolTipService.InitialShowDelay="100"
                               Command="{Binding VerifyNodeCommand}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Play20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button FontSize="25" ToolTip="保存" ToolTipService.InitialShowDelay="100"
                               Command="{Binding SaveCustomScenarioCommand}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="Save20" />
                        </ui:Button.Icon>
                    </ui:Button>
                    <ui:Button FontSize="25" ToolTip="退出并保存" ToolTipService.InitialShowDelay="100"
                               Command="{Binding SaveAndQuitCustomScenarioCommand}"
                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                        <ui:Button.Icon>
                            <ui:SymbolIcon Symbol="SaveArrowRight20" />
                        </ui:Button.Icon>
                    </ui:Button>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>


</ui:FluentWindow>